<?php

declare(strict_types=1);

namespace DoctrineMigrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

/**
 * Auto-generated Migration: Please modify to your needs!
 */
final class Version20210525065809 extends AbstractMigration
{
    public function getDescription() : string
    {
        return '';
    }

    public function up(Schema $schema) : void
    {
        // this up() migration is auto-generated, please modify it to your needs
        $this->addSql('ALTER TABLE MVIEW$_ADV_BASETABLE DROP CONSTRAINT MVIEW$_ADV_BASETABLE_FK');
        $this->addSql('ALTER TABLE MVIEW$_ADV_FILTERINSTANCE DROP CONSTRAINT MVIEW$_ADV_FILTERINSTANCE_FK');
        $this->addSql('ALTER TABLE MVIEW$_ADV_LEVEL DROP CONSTRAINT MVIEW$_ADV_LEVEL_FK');
        $this->addSql('ALTER TABLE MVIEW$_ADV_ROLLUP DROP CONSTRAINT MVIEW$_ADV_ROLLUP_FK');
        $this->addSql('ALTER TABLE MVIEW$_ADV_AJG DROP CONSTRAINT MVIEW$_ADV_AJG_FK');
        $this->addSql('ALTER TABLE MVIEW$_ADV_CLIQUE DROP CONSTRAINT MVIEW$_ADV_CLIQUE_FK');
        $this->addSql('ALTER TABLE MVIEW$_ADV_ELIGIBLE DROP CONSTRAINT MVIEW$_ADV_ELIGIBLE_FK');
        $this->addSql('ALTER TABLE MVIEW$_ADV_OUTPUT DROP CONSTRAINT MVIEW$_ADV_OUTPUT_FK');
        $this->addSql('ALTER TABLE MVIEW$_ADV_EXCEPTIONS DROP CONSTRAINT MVIEW$_ADV_EXCEPTION_FK');
        $this->addSql('ALTER TABLE MVIEW$_ADV_INFO DROP CONSTRAINT MVIEW$_ADV_INFO_FK');
        $this->addSql('ALTER TABLE MVIEW$_ADV_JOURNAL DROP CONSTRAINT MVIEW$_ADV_JOURNAL_FK');
        $this->addSql('ALTER TABLE MVIEW$_ADV_ROLLUP DROP CONSTRAINT MVIEW$_ADV_ROLLUP_CFK');
        $this->addSql('ALTER TABLE MVIEW$_ADV_ROLLUP DROP CONSTRAINT MVIEW$_ADV_ROLLUP_PFK');
        $this->addSql('ALTER TABLE MVIEW$_ADV_FJG DROP CONSTRAINT MVIEW$_ADV_FJG_FK');
        $this->addSql('ALTER TABLE MVIEW$_ADV_GC DROP CONSTRAINT MVIEW$_ADV_GC_FK');
        $this->addSql('ALTER TABLE AQ$_INTERNET_AGENT_PRIVS DROP CONSTRAINT AGENT_MUST_BE_CREATED');
        $this->addSql('DROP SEQUENCE LOGMNR_DIDS$');
        $this->addSql('DROP SEQUENCE LOGMNR_EVOLVE_SEQ$');
        $this->addSql('DROP SEQUENCE LOGMNR_SEQ$');
        $this->addSql('DROP SEQUENCE LOGMNR_UIDS$');
        $this->addSql('DROP SEQUENCE MESSAGES_SEQ');
        $this->addSql('DROP SEQUENCE MVIEW$_ADVSEQ_GENERIC');
        $this->addSql('DROP SEQUENCE MVIEW$_ADVSEQ_ID');
        $this->addSql('DROP SEQUENCE ROLLING_EVENT_SEQ$');
        $this->addSql('DROP SEQUENCE TASKS_SEQ');
        $this->addSql('CREATE TABLE files (id NUMBER(10) NOT NULL, hash VARCHAR2(64) NOT NULL, file_name VARCHAR2(1024) NOT NULL, mime_type VARCHAR2(32) NOT NULL, created_at TIMESTAMP(0) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('DECLARE
          constraints_Count NUMBER;
        BEGIN
          SELECT COUNT(CONSTRAINT_NAME) INTO constraints_Count FROM USER_CONSTRAINTS WHERE TABLE_NAME = \'FILES\' AND CONSTRAINT_TYPE = \'P\';
          IF constraints_Count = 0 OR constraints_Count = \'\' THEN
            EXECUTE IMMEDIATE \'ALTER TABLE FILES ADD CONSTRAINT FILES_AI_PK PRIMARY KEY (ID)\';
          END IF;
        END;');
        $this->addSql('CREATE SEQUENCE FILES_SEQ START WITH 1 MINVALUE 1 INCREMENT BY 1');
        $this->addSql('CREATE TRIGGER FILES_AI_PK
           BEFORE INSERT
           ON FILES
           FOR EACH ROW
        DECLARE
           last_Sequence NUMBER;
           last_InsertID NUMBER;
        BEGIN
           SELECT FILES_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
           IF (:NEW.ID IS NULL OR :NEW.ID = 0) THEN
              SELECT FILES_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
           ELSE
              SELECT NVL(Last_Number, 0) INTO last_Sequence
                FROM User_Sequences
               WHERE Sequence_Name = \'FILES_SEQ\';
              SELECT :NEW.ID INTO last_InsertID FROM DUAL;
              WHILE (last_InsertID > last_Sequence) LOOP
                 SELECT FILES_SEQ.NEXTVAL INTO last_Sequence FROM DUAL;
              END LOOP;
           END IF;
        END;');
        $this->addSql('CREATE TABLE messages_files (message_id NUMBER(10) NOT NULL, file_id NUMBER(10) NOT NULL, PRIMARY KEY(message_id, file_id))');
        $this->addSql('CREATE INDEX IDX_B3376222537A1329 ON messages_files (message_id)');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_B337622293CB796C ON messages_files (file_id)');
        $this->addSql('CREATE TABLE notifications (id NUMBER(10) NOT NULL, created_user_id NUMBER(10) DEFAULT NULL NULL, title VARCHAR2(80) NOT NULL, content VARCHAR2(255) NOT NULL, is_read NUMBER(1) NOT NULL, created_at TIMESTAMP(0) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('DECLARE
          constraints_Count NUMBER;
        BEGIN
          SELECT COUNT(CONSTRAINT_NAME) INTO constraints_Count FROM USER_CONSTRAINTS WHERE TABLE_NAME = \'NOTIFICATIONS\' AND CONSTRAINT_TYPE = \'P\';
          IF constraints_Count = 0 OR constraints_Count = \'\' THEN
            EXECUTE IMMEDIATE \'ALTER TABLE NOTIFICATIONS ADD CONSTRAINT NOTIFICATIONS_AI_PK PRIMARY KEY (ID)\';
          END IF;
        END;');
        $this->addSql('CREATE SEQUENCE NOTIFICATIONS_SEQ START WITH 1 MINVALUE 1 INCREMENT BY 1');
        $this->addSql('CREATE TRIGGER NOTIFICATIONS_AI_PK
           BEFORE INSERT
           ON NOTIFICATIONS
           FOR EACH ROW
        DECLARE
           last_Sequence NUMBER;
           last_InsertID NUMBER;
        BEGIN
           SELECT NOTIFICATIONS_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
           IF (:NEW.ID IS NULL OR :NEW.ID = 0) THEN
              SELECT NOTIFICATIONS_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
           ELSE
              SELECT NVL(Last_Number, 0) INTO last_Sequence
                FROM User_Sequences
               WHERE Sequence_Name = \'NOTIFICATIONS_SEQ\';
              SELECT :NEW.ID INTO last_InsertID FROM DUAL;
              WHILE (last_InsertID > last_Sequence) LOOP
                 SELECT NOTIFICATIONS_SEQ.NEXTVAL INTO last_Sequence FROM DUAL;
              END LOOP;
           END IF;
        END;');
        $this->addSql('CREATE INDEX IDX_6000B0D3E104C1D3 ON notifications (created_user_id)');
        $this->addSql('CREATE TABLE tasks_files (task_id NUMBER(10) NOT NULL, file_id NUMBER(10) NOT NULL, PRIMARY KEY(task_id, file_id))');
        $this->addSql('CREATE INDEX IDX_BFB97BFE8DB60186 ON tasks_files (task_id)');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_BFB97BFE93CB796C ON tasks_files (file_id)');
        $this->addSql('ALTER TABLE messages_files ADD CONSTRAINT FK_B3376222537A1329 FOREIGN KEY (message_id) REFERENCES messages (id)');
        $this->addSql('ALTER TABLE messages_files ADD CONSTRAINT FK_B337622293CB796C FOREIGN KEY (file_id) REFERENCES files (id)');
        $this->addSql('ALTER TABLE notifications ADD CONSTRAINT FK_6000B0D3E104C1D3 FOREIGN KEY (created_user_id) REFERENCES users (id) ON DELETE SET NULL');
        $this->addSql('ALTER TABLE tasks_files ADD CONSTRAINT FK_BFB97BFE8DB60186 FOREIGN KEY (task_id) REFERENCES tasks (id)');
        $this->addSql('ALTER TABLE tasks_files ADD CONSTRAINT FK_BFB97BFE93CB796C FOREIGN KEY (file_id) REFERENCES files (id)');
        $this->addSql('DROP TABLE LOGMNR_SESSION_EVOLVE$');
        $this->addSql('DROP TABLE LOGMNR_GLOBAL$');
        $this->addSql('DROP TABLE LOGMNR_PDB_INFO$');
        $this->addSql('DROP TABLE LOGMNR_DID$');
        $this->addSql('DROP TABLE LOGMNR_UID$');
        $this->addSql('DROP TABLE LOGMNRGGC_GTLO');
        $this->addSql('DROP TABLE LOGMNRGGC_GTCS');
        $this->addSql('DROP TABLE LOGMNRC_DBNAME_UID_MAP');
        $this->addSql('DROP TABLE LOGMNR_LOG$');
        $this->addSql('DROP TABLE LOGMNR_PROCESSED_LOG$');
        $this->addSql('DROP TABLE LOGMNR_SPILL$');
        $this->addSql('DROP TABLE LOGMNR_AGE_SPILL$');
        $this->addSql('DROP TABLE LOGMNR_RESTART_CKPT_TXINFO$');
        $this->addSql('DROP TABLE LOGMNR_ERROR$');
        $this->addSql('DROP TABLE LOGMNR_RESTART_CKPT$');
        $this->addSql('DROP TABLE LOGMNR_FILTER$');
        $this->addSql('DROP TABLE LOGMNR_SESSION_ACTIONS$');
        $this->addSql('DROP TABLE LOGMNR_PARAMETER$');
        $this->addSql('DROP TABLE LOGMNR_SESSION$');
        $this->addSql('DROP TABLE REDO_DB');
        $this->addSql('DROP TABLE REDO_LOG');
        $this->addSql('DROP TABLE ROLLING$CONNECTIONS');
        $this->addSql('DROP TABLE ROLLING$DATABASES');
        $this->addSql('DROP TABLE ROLLING$DIRECTIVES');
        $this->addSql('DROP TABLE ROLLING$EVENTS');
        $this->addSql('DROP TABLE ROLLING$PARAMETERS');
        $this->addSql('DROP TABLE ROLLING$PLAN');
        $this->addSql('DROP TABLE ROLLING$STATISTICS');
        $this->addSql('DROP TABLE ROLLING$STATUS');
        $this->addSql('DROP TABLE MVIEW$_ADV_WORKLOAD');
        $this->addSql('DROP TABLE MVIEW$_ADV_BASETABLE');
        $this->addSql('DROP TABLE MVIEW$_ADV_SQLDEPEND');
        $this->addSql('DROP TABLE MVIEW$_ADV_PRETTY');
        $this->addSql('DROP TABLE MVIEW$_ADV_TEMP');
        $this->addSql('DROP TABLE MVIEW$_ADV_FILTER');
        $this->addSql('DROP TABLE MVIEW$_ADV_LOG');
        $this->addSql('DROP TABLE MVIEW$_ADV_FILTERINSTANCE');
        $this->addSql('DROP TABLE MVIEW$_ADV_LEVEL');
        $this->addSql('DROP TABLE MVIEW$_ADV_ROLLUP');
        $this->addSql('DROP TABLE MVIEW$_ADV_AJG');
        $this->addSql('DROP TABLE MVIEW$_ADV_FJG');
        $this->addSql('DROP TABLE MVIEW$_ADV_GC');
        $this->addSql('DROP TABLE MVIEW$_ADV_CLIQUE');
        $this->addSql('DROP TABLE MVIEW$_ADV_ELIGIBLE');
        $this->addSql('DROP TABLE MVIEW$_ADV_OUTPUT');
        $this->addSql('DROP TABLE MVIEW$_ADV_EXCEPTIONS');
        $this->addSql('DROP TABLE MVIEW$_ADV_PARAMETERS');
        $this->addSql('DROP TABLE MVIEW$_ADV_INFO');
        $this->addSql('DROP TABLE MVIEW$_ADV_JOURNAL');
        $this->addSql('DROP TABLE MVIEW$_ADV_PLAN');
        $this->addSql('DROP TABLE AQ$_QUEUE_TABLES');
        $this->addSql('DROP TABLE AQ$_QUEUES');
        $this->addSql('DROP TABLE AQ$_SCHEDULES');
        $this->addSql('DROP TABLE AQ$_INTERNET_AGENTS');
        $this->addSql('DROP TABLE AQ$_INTERNET_AGENT_PRIVS');
        $this->addSql('DROP TABLE SCHEDULER_PROGRAM_ARGS_TBL');
        $this->addSql('DROP TABLE SCHEDULER_JOB_ARGS_TBL');
        $this->addSql('DROP TABLE LOGSTDBY$PARAMETERS');
        $this->addSql('DROP TABLE LOGSTDBY$EVENTS');
        $this->addSql('DROP TABLE LOGSTDBY$APPLY_MILESTONE');
        $this->addSql('DROP TABLE LOGSTDBY$SCN');
        $this->addSql('DROP TABLE LOGSTDBY$FLASHBACK_SCN');
        $this->addSql('DROP TABLE LOGSTDBY$PLSQL');
        $this->addSql('DROP TABLE LOGSTDBY$SKIP_TRANSACTION');
        $this->addSql('DROP TABLE LOGSTDBY$SKIP');
        $this->addSql('DROP TABLE LOGSTDBY$SKIP_SUPPORT');
        $this->addSql('DROP TABLE LOGSTDBY$HISTORY');
        $this->addSql('DROP TABLE LOGSTDBY$EDS_TABLES');
        $this->addSql('DROP TABLE SQLPLUS_PRODUCT_PROFILE');
        $this->addSql('DROP TABLE HELP');
        $this->addSql('DROP TABLE LOGMNR_GT_TAB_INCLUDE$');
        $this->addSql('DROP TABLE LOGMNR_GT_USER_INCLUDE$');
        $this->addSql('DROP TABLE LOGMNR_GT_XID_INCLUDE$');
        $this->addSql('DROP TABLE LOGMNRT_MDDL$');
        $this->addSql('DROP TABLE OL$');
        $this->addSql('DROP TABLE OL$HINTS');
        $this->addSql('DROP TABLE OL$NODES');
        $this->addSql('DROP TABLE LOGMNR_DICTSTATE$');
        $this->addSql('DROP TABLE LOGMNRC_GTLO');
        $this->addSql('DROP TABLE LOGMNRC_GTCS');
        $this->addSql('DROP TABLE LOGMNRC_SEQ_GG');
        $this->addSql('DROP TABLE LOGMNRC_CON_GG');
        $this->addSql('DROP TABLE LOGMNRC_CONCOL_GG');
        $this->addSql('DROP TABLE LOGMNRC_IND_GG');
        $this->addSql('DROP TABLE LOGMNRC_INDCOL_GG');
        $this->addSql('DROP TABLE LOGMNRC_SHARD_TS');
        $this->addSql('DROP TABLE LOGMNRC_TSPART');
        $this->addSql('DROP TABLE LOGMNRC_TS');
        $this->addSql('DROP TABLE LOGMNRC_GSII');
        $this->addSql('DROP TABLE LOGMNRC_GSBA');
        $this->addSql('DROP TABLE LOGMNR_SEED$');
        $this->addSql('DROP TABLE LOGMNR_DICTIONARY$');
        $this->addSql('DROP TABLE LOGMNR_OBJ$');
        $this->addSql('DROP TABLE LOGMNR_TAB$');
        $this->addSql('DROP TABLE LOGMNR_COL$');
        $this->addSql('DROP TABLE LOGMNR_ATTRCOL$');
        $this->addSql('DROP TABLE LOGMNR_TS$');
        $this->addSql('DROP TABLE LOGMNR_IND$');
        $this->addSql('DROP TABLE LOGMNR_USER$');
        $this->addSql('DROP TABLE LOGMNR_TABPART$');
        $this->addSql('DROP TABLE LOGMNR_TABSUBPART$');
        $this->addSql('DROP TABLE LOGMNR_TABCOMPART$');
        $this->addSql('DROP TABLE LOGMNR_TYPE$');
        $this->addSql('DROP TABLE LOGMNR_COLTYPE$');
        $this->addSql('DROP TABLE LOGMNR_ATTRIBUTE$');
        $this->addSql('DROP TABLE LOGMNR_LOB$');
        $this->addSql('DROP TABLE LOGMNR_CON$');
        $this->addSql('DROP TABLE LOGMNR_CONTAINER$');
        $this->addSql('DROP TABLE LOGMNR_CDEF$');
        $this->addSql('DROP TABLE LOGMNR_CCOL$');
        $this->addSql('DROP TABLE LOGMNR_ICOL$');
        $this->addSql('DROP TABLE LOGMNR_LOBFRAG$');
        $this->addSql('DROP TABLE LOGMNR_INDPART$');
        $this->addSql('DROP TABLE LOGMNR_INDSUBPART$');
        $this->addSql('DROP TABLE LOGMNR_INDCOMPART$');
        $this->addSql('DROP TABLE LOGMNR_LOGMNR_BUILDLOG');
        $this->addSql('DROP TABLE LOGMNR_NTAB$');
        $this->addSql('DROP TABLE LOGMNR_OPQTYPE$');
        $this->addSql('DROP TABLE LOGMNR_SUBCOLTYPE$');
        $this->addSql('DROP TABLE LOGMNR_KOPM$');
        $this->addSql('DROP TABLE LOGMNR_PROPS$');
        $this->addSql('DROP TABLE LOGMNR_ENC$');
        $this->addSql('DROP TABLE LOGMNR_REFCON$');
        $this->addSql('DROP TABLE LOGMNR_IDNSEQ$');
        $this->addSql('DROP TABLE LOGMNR_PARTOBJ$');
        $this->addSql('DROP TABLE LOGMNRP_CTAS_PART_MAP');
        $this->addSql('DROP TABLE LOGMNR_SHARD_TS');
        $this->addSql('DROP TABLE LOGSTDBY$APPLY_PROGRESS');
        $this->addSql('ALTER TABLE MESSAGES MODIFY (id NUMBER(10) DEFAULT NULL)');
        $this->addSql('ALTER TABLE TASKS MODIFY (id NUMBER(10) DEFAULT NULL, content CLOB DEFAULT NULL)');
    }

    public function down(Schema $schema) : void
    {
        // this down() migration is auto-generated, please modify it to your needs
        $this->addSql('ALTER TABLE messages_files DROP CONSTRAINT FK_B337622293CB796C');
        $this->addSql('ALTER TABLE tasks_files DROP CONSTRAINT FK_BFB97BFE93CB796C');
        $this->addSql('CREATE SEQUENCE LOGMNR_DIDS$ START WITH 1 MINVALUE 1 INCREMENT BY 1');
        $this->addSql('CREATE SEQUENCE LOGMNR_EVOLVE_SEQ$ START WITH 1 MINVALUE 1 INCREMENT BY 1');
        $this->addSql('CREATE SEQUENCE LOGMNR_SEQ$ START WITH 1 MINVALUE 1 INCREMENT BY 1');
        $this->addSql('CREATE SEQUENCE LOGMNR_UIDS$ START WITH 100 MINVALUE 100 INCREMENT BY 1');
        $this->addSql('CREATE SEQUENCE MESSAGES_SEQ START WITH 1 MINVALUE 1 INCREMENT BY 1');
        $this->addSql('CREATE SEQUENCE MVIEW$_ADVSEQ_GENERIC START WITH 1 MINVALUE 1 INCREMENT BY 1');
        $this->addSql('CREATE SEQUENCE MVIEW$_ADVSEQ_ID START WITH 1 MINVALUE 1 INCREMENT BY 1');
        $this->addSql('CREATE SEQUENCE ROLLING_EVENT_SEQ$ START WITH 1 MINVALUE 1 INCREMENT BY 1');
        $this->addSql('CREATE SEQUENCE TASKS_SEQ START WITH 1 MINVALUE 1 INCREMENT BY 1');
        $this->addSql('CREATE TABLE LOGMNR_SESSION_EVOLVE$ (BRANCH_LEVEL NUMBER(10) DEFAULT NULL NULL, SESSION# NUMBER(10) NOT NULL, DB_ID NUMBER(10) NOT NULL, RESET_SCN NUMBER(10) NOT NULL, RESET_TIMESTAMP NUMBER(10) NOT NULL, PREV_RESET_SCN NUMBER(10) DEFAULT NULL NULL, PREV_RESET_TIMESTAMP NUMBER(10) DEFAULT NULL NULL, STATUS NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 NUMBER(10) DEFAULT NULL NULL, SPARE4 DATE DEFAULT NULL NULL, PRIMARY KEY(SESSION#, DB_ID, RESET_SCN, RESET_TIMESTAMP))');
        $this->addSql('CREATE TABLE LOGMNR_GLOBAL$ (HIGH_RECID_FOREIGN NUMBER(10) DEFAULT NULL NULL, HIGH_RECID_DELETED NUMBER(10) DEFAULT NULL NULL, LOCAL_RESET_SCN NUMBER(10) DEFAULT NULL NULL, LOCAL_RESET_TIMESTAMP NUMBER(10) DEFAULT NULL NULL, VERSION_TIMESTAMP NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 NUMBER(10) DEFAULT NULL NULL, SPARE4 VARCHAR2(2000) DEFAULT NULL NULL, SPARE5 DATE DEFAULT NULL NULL, SESSION# NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGMNR_PDB_INFO$ (LOGMNR_DID NUMBER(10) NOT NULL, LOGMNR_MDH NUMBER(10) NOT NULL, PDB_NAME VARCHAR2(384) DEFAULT NULL NULL, PDB_ID NUMBER(10) DEFAULT NULL NULL, PDB_UID NUMBER(10) DEFAULT NULL NULL, PLUGIN_SCN NUMBER(10) NOT NULL, UNPLUG_SCN NUMBER(10) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(4000) DEFAULT NULL NULL, SPARE4 TIMESTAMP(0) DEFAULT NULL NULL, PDB_GLOBAL_NAME VARCHAR2(384) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_DID, LOGMNR_MDH, PLUGIN_SCN))');
        $this->addSql('CREATE TABLE LOGMNR_DID$ (SESSION# NUMBER(10) NOT NULL, LOGMNR_DID NUMBER(10) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT 0 NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(4000) DEFAULT NULL NULL, SPARE4 TIMESTAMP(0) DEFAULT NULL NULL, PRIMARY KEY(SESSION#))');
        $this->addSql('CREATE TABLE LOGMNR_UID$ (LOGMNR_UID NUMBER(10) NOT NULL, LOGMNR_DID NUMBER(10) DEFAULT NULL NULL, LOGMNR_MDH NUMBER(10) DEFAULT NULL NULL, PDB_NAME VARCHAR2(384) DEFAULT NULL NULL, PDB_ID NUMBER(10) DEFAULT NULL NULL, PDB_UID NUMBER(10) DEFAULT NULL NULL, START_SCN NUMBER(10) DEFAULT NULL NULL, END_SCN NUMBER(10) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(4000) DEFAULT NULL NULL, SPARE4 TIMESTAMP(0) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID))');
        $this->addSql('CREATE TABLE LOGMNRGGC_GTLO (LOGMNR_UID NUMBER(10) NOT NULL, KEYOBJ# NUMBER(10) NOT NULL, LVLCNT NUMBER(10) NOT NULL, BASEOBJ# NUMBER(10) NOT NULL, BASEOBJV# NUMBER(10) NOT NULL, LVL1OBJ# NUMBER(10) DEFAULT NULL NULL, LVL2OBJ# NUMBER(10) DEFAULT NULL NULL, LVL0TYPE# NUMBER(10) NOT NULL, LVL1TYPE# NUMBER(10) DEFAULT NULL NULL, LVL2TYPE# NUMBER(10) DEFAULT NULL NULL, OWNER# NUMBER(10) DEFAULT NULL NULL, OWNERNAME VARCHAR2(384) NOT NULL, LVL0NAME VARCHAR2(384) NOT NULL, LVL1NAME VARCHAR2(384) DEFAULT NULL NULL, LVL2NAME VARCHAR2(384) DEFAULT NULL NULL, INTCOLS NUMBER(10) NOT NULL, COLS NUMBER(10) DEFAULT NULL NULL, KERNELCOLS NUMBER(10) DEFAULT NULL NULL, TAB_FLAGS NUMBER(10) DEFAULT NULL NULL, TRIGFLAG NUMBER(10) DEFAULT NULL NULL, ASSOC# NUMBER(10) DEFAULT NULL NULL, OBJ_FLAGS NUMBER(10) DEFAULT NULL NULL, TS# NUMBER(10) DEFAULT NULL NULL, TSNAME VARCHAR2(90) DEFAULT NULL NULL, PROPERTY NUMBER(10) DEFAULT NULL NULL, START_SCN NUMBER(10) NOT NULL, DROP_SCN NUMBER(10) DEFAULT NULL NULL, XIDUSN NUMBER(10) DEFAULT NULL NULL, XIDSLT NUMBER(10) DEFAULT NULL NULL, XIDSQN NUMBER(10) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE1 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE2 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE3 VARCHAR2(1000) DEFAULT NULL NULL, LOGMNR_SPARE4 DATE DEFAULT NULL NULL, LOGMNR_SPARE5 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE6 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE7 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE8 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE9 NUMBER(10) DEFAULT NULL NULL, PARTTYPE NUMBER(10) DEFAULT NULL NULL, SUBPARTTYPE NUMBER(10) DEFAULT NULL NULL, UNSUPPORTEDCOLS NUMBER(10) DEFAULT NULL NULL, COMPLEXTYPECOLS NUMBER(10) DEFAULT NULL NULL, NTPARENTOBJNUM NUMBER(10) DEFAULT NULL NULL, NTPARENTOBJVERSION NUMBER(10) DEFAULT NULL NULL, NTPARENTINTCOLNUM NUMBER(10) DEFAULT NULL NULL, LOGMNRTLOFLAGS NUMBER(10) DEFAULT NULL NULL, LOGMNRMCV VARCHAR2(30) DEFAULT NULL NULL, ACDRFLAGS NUMBER(10) DEFAULT NULL NULL, ACDRTSOBJ# NUMBER(10) DEFAULT NULL NULL, ACDRROWTSINTCOL# NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, KEYOBJ#, BASEOBJV#))');
        $this->addSql('CREATE INDEX logmnrggc_i2gtlo ON LOGMNRGGC_GTLO (LOGMNR_UID, BASEOBJ#, BASEOBJV#)');
        $this->addSql('CREATE INDEX logmnrggc_i3gtlo ON LOGMNRGGC_GTLO (LOGMNR_UID, DROP_SCN)');
        $this->addSql('CREATE TABLE LOGMNRGGC_GTCS (LOGMNR_UID NUMBER(10) NOT NULL, OBJ# NUMBER(10) NOT NULL, OBJV# NUMBER(10) NOT NULL, SEGCOL# NUMBER(10) NOT NULL, INTCOL# NUMBER(10) NOT NULL, COLNAME VARCHAR2(384) NOT NULL, TYPE# NUMBER(10) NOT NULL, LENGTH NUMBER(10) DEFAULT NULL NULL, PRECISION NUMBER(10) DEFAULT NULL NULL, SCALE NUMBER(10) DEFAULT NULL NULL, INTERVAL_LEADING_PRECISION NUMBER(10) DEFAULT NULL NULL, INTERVAL_TRAILING_PRECISION NUMBER(10) DEFAULT NULL NULL, PROPERTY NUMBER(10) DEFAULT NULL NULL, TOID RAW(255) DEFAULT NULL NULL, CHARSETID NUMBER(10) DEFAULT NULL NULL, CHARSETFORM NUMBER(10) DEFAULT NULL NULL, TYPENAME VARCHAR2(384) DEFAULT NULL NULL, FQCOLNAME VARCHAR2(4000) DEFAULT NULL NULL, NUMINTCOLS NUMBER(10) DEFAULT NULL NULL, NUMATTRS NUMBER(10) DEFAULT NULL NULL, ADTORDER NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE1 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE2 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE3 VARCHAR2(1000) DEFAULT NULL NULL, LOGMNR_SPARE4 DATE DEFAULT NULL NULL, LOGMNR_SPARE5 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE6 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE7 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE8 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE9 NUMBER(10) DEFAULT NULL NULL, COL# NUMBER(10) DEFAULT NULL NULL, XTYPESCHEMANAME VARCHAR2(384) DEFAULT NULL NULL, XTYPENAME VARCHAR2(4000) DEFAULT NULL NULL, XFQCOLNAME VARCHAR2(4000) DEFAULT NULL NULL, XTOPINTCOL NUMBER(10) DEFAULT NULL NULL, XREFFEDTABLEOBJN NUMBER(10) DEFAULT NULL NULL, XREFFEDTABLEOBJV NUMBER(10) DEFAULT NULL NULL, XCOLTYPEFLAGS NUMBER(10) DEFAULT NULL NULL, XOPQTYPETYPE NUMBER(10) DEFAULT NULL NULL, XOPQTYPEFLAGS NUMBER(10) DEFAULT NULL NULL, XOPQLOBINTCOL NUMBER(10) DEFAULT NULL NULL, XOPQOBJINTCOL NUMBER(10) DEFAULT NULL NULL, XXMLINTCOL NUMBER(10) DEFAULT NULL NULL, EAOWNER# NUMBER(10) DEFAULT NULL NULL, EAMKEYID VARCHAR2(192) DEFAULT NULL NULL, EAENCALG NUMBER(10) DEFAULT NULL NULL, EAINTALG NUMBER(10) DEFAULT NULL NULL, EACOLKLC RAW(255) DEFAULT NULL NULL, EAKLCLEN NUMBER(10) DEFAULT NULL NULL, EAFLAGS NUMBER(10) DEFAULT NULL NULL, LOGMNRDERIVEDFLAGS NUMBER(10) DEFAULT NULL NULL, COLLID NUMBER(10) DEFAULT NULL NULL, COLLINTCOL# NUMBER(10) DEFAULT NULL NULL, ACDRRESCOL# NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, OBJ#, OBJV#, INTCOL#))');
        $this->addSql('CREATE INDEX logmnrggc_i2gtcs ON LOGMNRGGC_GTCS (LOGMNR_UID, OBJ#, OBJV#, SEGCOL#, INTCOL#)');
        $this->addSql('CREATE TABLE LOGMNRC_DBNAME_UID_MAP (GLOBAL_NAME VARCHAR2(384) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, PDB_NAME VARCHAR2(384) DEFAULT NULL NULL, LOGMNR_MDH NUMBER(10) NOT NULL, PRIMARY KEY(GLOBAL_NAME, LOGMNR_MDH))');
        $this->addSql('CREATE TABLE LOGMNR_LOG$ (SESSION# NUMBER(10) NOT NULL, THREAD# NUMBER(10) NOT NULL, SEQUENCE# NUMBER(10) NOT NULL, FIRST_CHANGE# NUMBER(10) NOT NULL, NEXT_CHANGE# NUMBER(10) DEFAULT NULL NULL, FIRST_TIME DATE DEFAULT NULL NULL, NEXT_TIME DATE DEFAULT NULL NULL, FILE_NAME VARCHAR2(513) DEFAULT NULL NULL, STATUS NUMBER(10) DEFAULT NULL NULL, INFO VARCHAR2(32) DEFAULT NULL NULL, TIMESTAMP DATE DEFAULT NULL NULL, DICT_BEGIN VARCHAR2(3) DEFAULT NULL NULL, DICT_END VARCHAR2(3) DEFAULT NULL NULL, STATUS_INFO VARCHAR2(32) DEFAULT NULL NULL, DB_ID NUMBER(10) NOT NULL, RESETLOGS_CHANGE# NUMBER(10) NOT NULL, RESET_TIMESTAMP NUMBER(10) NOT NULL, PREV_RESETLOGS_CHANGE# NUMBER(10) DEFAULT NULL NULL, PREV_RESET_TIMESTAMP NUMBER(10) DEFAULT NULL NULL, BLOCKS NUMBER(10) DEFAULT NULL NULL, BLOCK_SIZE NUMBER(10) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, CONTENTS NUMBER(10) DEFAULT NULL NULL, RECID NUMBER(10) DEFAULT NULL NULL, RECSTAMP NUMBER(10) DEFAULT NULL NULL, MARK_DELETE_TIMESTAMP NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 NUMBER(10) DEFAULT NULL NULL, SPARE4 NUMBER(10) DEFAULT NULL NULL, SPARE5 NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(SESSION#, THREAD#, SEQUENCE#, FIRST_CHANGE#, DB_ID, RESETLOGS_CHANGE#, RESET_TIMESTAMP))');
        $this->addSql('CREATE INDEX logmnr_log$_first_change# ON LOGMNR_LOG$ (FIRST_CHANGE#)');
        $this->addSql('CREATE INDEX logmnr_log$_flags ON LOGMNR_LOG$ (FLAGS)');
        $this->addSql('CREATE INDEX logmnr_log$_recid ON LOGMNR_LOG$ (RECID)');
        $this->addSql('CREATE INDEX logmnr_log$_purge_idx1 ON LOGMNR_LOG$ (FILE_NAME, STATUS)');
        $this->addSql('CREATE INDEX logmnr_log$_purge_idx2 ON LOGMNR_LOG$ (SESSION#, RESET_TIMESTAMP, NEXT_CHANGE#, STATUS)');
        $this->addSql('CREATE TABLE LOGMNR_PROCESSED_LOG$ (SESSION# NUMBER(10) NOT NULL, THREAD# NUMBER(10) NOT NULL, SEQUENCE# NUMBER(10) DEFAULT NULL NULL, FIRST_CHANGE# NUMBER(10) DEFAULT NULL NULL, NEXT_CHANGE# NUMBER(10) DEFAULT NULL NULL, FIRST_TIME DATE DEFAULT NULL NULL, NEXT_TIME DATE DEFAULT NULL NULL, FILE_NAME VARCHAR2(513) DEFAULT NULL NULL, STATUS NUMBER(10) DEFAULT NULL NULL, INFO VARCHAR2(32) DEFAULT NULL NULL, TIMESTAMP DATE DEFAULT NULL NULL, PRIMARY KEY(SESSION#, THREAD#))');
        $this->addSql('CREATE TABLE LOGMNR_SPILL$ (SESSION# NUMBER(10) NOT NULL, XIDUSN NUMBER(10) NOT NULL, XIDSLT NUMBER(10) NOT NULL, XIDSQN NUMBER(10) NOT NULL, CHUNK NUMBER(10) NOT NULL, STARTIDX NUMBER(10) NOT NULL, ENDIDX NUMBER(10) NOT NULL, FLAG NUMBER(10) NOT NULL, SEQUENCE# NUMBER(10) NOT NULL, SPILL_DATA BLOB DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, PDBID NUMBER(10) NOT NULL, PRIMARY KEY(SESSION#, PDBID, XIDUSN, XIDSLT, XIDSQN, CHUNK, STARTIDX, ENDIDX, FLAG, SEQUENCE#))');
        $this->addSql('CREATE TABLE LOGMNR_AGE_SPILL$ (SESSION# NUMBER(10) NOT NULL, XIDUSN NUMBER(10) NOT NULL, XIDSLT NUMBER(10) NOT NULL, XIDSQN NUMBER(10) NOT NULL, CHUNK NUMBER(10) NOT NULL, SEQUENCE# NUMBER(10) NOT NULL, OFFSET NUMBER(10) DEFAULT NULL NULL, SPILL_DATA BLOB DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, PDBID NUMBER(10) NOT NULL, PRIMARY KEY(SESSION#, PDBID, XIDUSN, XIDSLT, XIDSQN, CHUNK, SEQUENCE#))');
        $this->addSql('CREATE TABLE LOGMNR_RESTART_CKPT_TXINFO$ (SESSION# NUMBER(10) NOT NULL, XIDUSN NUMBER(10) NOT NULL, XIDSLT NUMBER(10) NOT NULL, XIDSQN NUMBER(10) NOT NULL, SESSION_NUM NUMBER(10) NOT NULL, SERIAL_NUM NUMBER(10) NOT NULL, FLAG NUMBER(10) DEFAULT NULL NULL, START_SCN NUMBER(10) DEFAULT NULL NULL, EFFECTIVE_SCN NUMBER(10) NOT NULL, OFFSET NUMBER(10) DEFAULT NULL NULL, TX_DATA BLOB DEFAULT NULL NULL, PRIMARY KEY(SESSION#, XIDUSN, XIDSLT, XIDSQN, SESSION_NUM, SERIAL_NUM, EFFECTIVE_SCN))');
        $this->addSql('CREATE TABLE LOGMNR_ERROR$ (SESSION# NUMBER(10) DEFAULT NULL NULL, TIME_OF_ERROR DATE DEFAULT NULL NULL, CODE NUMBER(10) DEFAULT NULL NULL, MESSAGE VARCHAR2(4000) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 NUMBER(10) DEFAULT NULL NULL, SPARE4 VARCHAR2(4000) DEFAULT NULL NULL, SPARE5 VARCHAR2(4000) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGMNR_RESTART_CKPT$ (SESSION# NUMBER(10) NOT NULL, VALID NUMBER(10) DEFAULT NULL NULL, CKPT_SCN NUMBER(10) NOT NULL, XIDUSN NUMBER(10) NOT NULL, XIDSLT NUMBER(10) NOT NULL, XIDSQN NUMBER(10) NOT NULL, SESSION_NUM NUMBER(10) NOT NULL, SERIAL_NUM NUMBER(10) NOT NULL, CKPT_INFO BLOB DEFAULT NULL NULL, FLAG NUMBER(10) DEFAULT NULL NULL, OFFSET NUMBER(10) DEFAULT NULL NULL, CLIENT_DATA BLOB DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, PDBID NUMBER(10) NOT NULL, PRIMARY KEY(SESSION#, CKPT_SCN, XIDUSN, XIDSLT, XIDSQN, PDBID, SESSION_NUM, SERIAL_NUM))');
        $this->addSql('CREATE TABLE LOGMNR_FILTER$ (SESSION# NUMBER(10) DEFAULT NULL NULL, FILTER_TYPE VARCHAR2(30) DEFAULT NULL NULL, ATTR1 NUMBER(10) DEFAULT NULL NULL, ATTR2 NUMBER(10) DEFAULT NULL NULL, ATTR3 NUMBER(10) DEFAULT NULL NULL, ATTR4 NUMBER(10) DEFAULT NULL NULL, ATTR5 NUMBER(10) DEFAULT NULL NULL, ATTR6 NUMBER(10) DEFAULT NULL NULL, FILTER_SCN NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 DATE DEFAULT NULL NULL, ATTR7 VARCHAR2(128) DEFAULT NULL NULL, ATTR8 VARCHAR2(128) DEFAULT NULL NULL, ATTR9 VARCHAR2(128) DEFAULT NULL NULL, ATTR10 VARCHAR2(128) DEFAULT NULL NULL, ATTR11 VARCHAR2(128) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGMNR_SESSION_ACTIONS$ (FLAGSRUNTIME NUMBER(10) DEFAULT 0 NULL, DROPSCN NUMBER(10) DEFAULT NULL NULL, MODIFYTIME TIMESTAMP(0) DEFAULT NULL NULL, DISPATCHTIME TIMESTAMP(0) DEFAULT NULL NULL, DROPTIME TIMESTAMP(0) DEFAULT NULL NULL, LCRCOUNT NUMBER(10) DEFAULT 0 NULL, ACTIONNAME VARCHAR2(30) NOT NULL, LOGMNRSESSION# NUMBER(10) NOT NULL, PROCESSROLE# NUMBER(10) NOT NULL, ACTIONTYPE# NUMBER(10) NOT NULL, FLAGSDEFINETIME NUMBER(10) DEFAULT NULL NULL, CREATETIME TIMESTAMP(0) DEFAULT NULL NULL, XIDUSN NUMBER(10) DEFAULT NULL NULL, XIDSLT NUMBER(10) DEFAULT NULL NULL, XIDSQN NUMBER(10) DEFAULT NULL NULL, THREAD# NUMBER(10) DEFAULT NULL NULL, STARTSCN NUMBER(10) DEFAULT NULL NULL, STARTSUBSCN NUMBER(10) DEFAULT NULL NULL, ENDSCN NUMBER(10) DEFAULT NULL NULL, ENDSUBSCN NUMBER(10) DEFAULT NULL NULL, RBASQN NUMBER(10) DEFAULT NULL NULL, RBABLK NUMBER(10) DEFAULT NULL NULL, RBABYTE NUMBER(10) DEFAULT NULL NULL, SESSION# NUMBER(10) DEFAULT NULL NULL, OBJ# NUMBER(10) DEFAULT NULL NULL, ATTR1 NUMBER(10) DEFAULT NULL NULL, ATTR2 NUMBER(10) DEFAULT NULL NULL, ATTR3 NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 TIMESTAMP(0) DEFAULT NULL NULL, SPARE4 VARCHAR2(2000) DEFAULT NULL NULL, PDBID NUMBER(10) DEFAULT NULL NULL, PDB_NAME VARCHAR2(390) DEFAULT NULL NULL, PRIMARY KEY(LOGMNRSESSION#, ACTIONNAME))');
        $this->addSql('CREATE TABLE LOGMNR_PARAMETER$ (SESSION# NUMBER(10) NOT NULL, NAME VARCHAR2(384) NOT NULL, VALUE VARCHAR2(2000) DEFAULT NULL NULL, TYPE NUMBER(10) DEFAULT NULL NULL, SCN NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(2000) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_parameter_indx ON LOGMNR_PARAMETER$ (SESSION#, NAME)');
        $this->addSql('CREATE TABLE LOGMNR_SESSION$ (SESSION# NUMBER(10) NOT NULL, CLIENT# NUMBER(10) DEFAULT NULL NULL, SESSION_NAME VARCHAR2(128) NOT NULL, DB_ID NUMBER(10) DEFAULT NULL NULL, RESETLOGS_CHANGE# NUMBER(10) DEFAULT NULL NULL, SESSION_ATTR NUMBER(10) DEFAULT NULL NULL, SESSION_ATTR_VERBOSE VARCHAR2(400) DEFAULT NULL NULL, START_SCN NUMBER(10) DEFAULT NULL NULL, END_SCN NUMBER(10) DEFAULT NULL NULL, SPILL_SCN NUMBER(10) DEFAULT NULL NULL, SPILL_TIME DATE DEFAULT NULL NULL, OLDEST_SCN NUMBER(10) DEFAULT NULL NULL, RESUME_SCN NUMBER(10) DEFAULT NULL NULL, GLOBAL_DB_NAME VARCHAR2(384) DEFAULT \'null\' NULL, RESET_TIMESTAMP NUMBER(10) DEFAULT NULL NULL, BRANCH_SCN NUMBER(10) DEFAULT NULL NULL, VERSION VARCHAR2(64) DEFAULT NULL NULL, REDO_COMPAT VARCHAR2(20) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, PURGE_SCN NUMBER(10) DEFAULT NULL NULL, SPARE3 NUMBER(10) DEFAULT NULL NULL, SPARE4 NUMBER(10) DEFAULT NULL NULL, SPARE5 NUMBER(10) DEFAULT NULL NULL, SPARE6 DATE DEFAULT NULL NULL, SPARE7 VARCHAR2(1000) DEFAULT NULL NULL, SPARE8 VARCHAR2(1000) DEFAULT NULL NULL, SPARE9 NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(SESSION#))');
        $this->addSql('CREATE UNIQUE INDEX logmnr_session_uk1 ON LOGMNR_SESSION$ (SESSION_NAME)');
        $this->addSql('CREATE TABLE REDO_DB (DBID NUMBER(10) NOT NULL, GLOBAL_DBNAME VARCHAR2(129) DEFAULT NULL NULL, DBUNAME VARCHAR2(32) DEFAULT NULL NULL, VERSION VARCHAR2(32) DEFAULT NULL NULL, THREAD# NUMBER(10) NOT NULL, RESETLOGS_SCN_BAS NUMBER(10) DEFAULT NULL NULL, RESETLOGS_SCN_WRP NUMBER(10) DEFAULT NULL NULL, RESETLOGS_TIME NUMBER(10) NOT NULL, PRESETLOGS_SCN_BAS NUMBER(10) DEFAULT NULL NULL, PRESETLOGS_SCN_WRP NUMBER(10) DEFAULT NULL NULL, PRESETLOGS_TIME NUMBER(10) NOT NULL, SEQNO_RCV_CUR NUMBER(10) DEFAULT NULL NULL, SEQNO_RCV_LO NUMBER(10) DEFAULT NULL NULL, SEQNO_RCV_HI NUMBER(10) DEFAULT NULL NULL, SEQNO_DONE_CUR NUMBER(10) DEFAULT NULL NULL, SEQNO_DONE_LO NUMBER(10) DEFAULT NULL NULL, SEQNO_DONE_HI NUMBER(10) DEFAULT NULL NULL, GAP_SEQNO NUMBER(10) DEFAULT NULL NULL, GAP_RET NUMBER(10) DEFAULT NULL NULL, GAP_DONE NUMBER(10) DEFAULT NULL NULL, APPLY_SEQNO NUMBER(10) DEFAULT NULL NULL, APPLY_DONE NUMBER(10) DEFAULT NULL NULL, PURGE_DONE NUMBER(10) DEFAULT NULL NULL, HAS_CHILD NUMBER(10) DEFAULT NULL NULL, ERROR1 NUMBER(10) DEFAULT NULL NULL, STATUS NUMBER(10) DEFAULT NULL NULL, CREATE_DATE DATE DEFAULT NULL NULL, TS1 NUMBER(10) DEFAULT NULL NULL, TS2 NUMBER(10) DEFAULT NULL NULL, GAP_NEXT_SCN NUMBER(10) DEFAULT NULL NULL, GAP_NEXT_TIME NUMBER(10) DEFAULT NULL NULL, CURSCN_TIME NUMBER(10) DEFAULT NULL NULL, RESETLOGS_SCN NUMBER(10) NOT NULL, PRESETLOGS_SCN NUMBER(10) NOT NULL, GAP_RET2 NUMBER(10) DEFAULT NULL NULL, CURLOG NUMBER(10) DEFAULT NULL NULL, ENDIAN NUMBER(10) DEFAULT NULL NULL, ENQIDX NUMBER(10) DEFAULT NULL NULL, SPARE4 NUMBER(10) DEFAULT NULL NULL, SPARE5 DATE DEFAULT NULL NULL, SPARE6 VARCHAR2(65) DEFAULT NULL NULL, SPARE7 VARCHAR2(129) DEFAULT NULL NULL, TS3 NUMBER(10) DEFAULT NULL NULL, CURBLKNO NUMBER(10) DEFAULT NULL NULL, SPARE8 NUMBER(10) DEFAULT NULL NULL, SPARE9 NUMBER(10) DEFAULT NULL NULL, SPARE10 NUMBER(10) DEFAULT NULL NULL, SPARE11 NUMBER(10) DEFAULT NULL NULL, SPARE12 NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX redo_db_idx ON REDO_DB (DBID, THREAD#, RESETLOGS_SCN, RESETLOGS_TIME)');
        $this->addSql('CREATE TABLE REDO_LOG (DBID NUMBER(10) NOT NULL, GLOBAL_DBNAME VARCHAR2(129) DEFAULT NULL NULL, DBUNAME VARCHAR2(32) DEFAULT NULL NULL, VERSION VARCHAR2(32) DEFAULT NULL NULL, THREAD# NUMBER(10) NOT NULL, RESETLOGS_SCN_BAS NUMBER(10) DEFAULT NULL NULL, RESETLOGS_SCN_WRP NUMBER(10) DEFAULT NULL NULL, RESETLOGS_TIME NUMBER(10) NOT NULL, PRESETLOGS_SCN_BAS NUMBER(10) DEFAULT NULL NULL, PRESETLOGS_SCN_WRP NUMBER(10) DEFAULT NULL NULL, PRESETLOGS_TIME NUMBER(10) NOT NULL, SEQUENCE# NUMBER(10) NOT NULL, DUPID NUMBER(10) DEFAULT NULL NULL, STATUS1 NUMBER(10) DEFAULT NULL NULL, STATUS2 NUMBER(10) DEFAULT NULL NULL, CREATE_TIME VARCHAR2(32) DEFAULT NULL NULL, CLOSE_TIME VARCHAR2(32) DEFAULT NULL NULL, DONE_TIME VARCHAR2(32) DEFAULT NULL NULL, FIRST_SCN_BAS NUMBER(10) DEFAULT NULL NULL, FIRST_SCN_WRP NUMBER(10) DEFAULT NULL NULL, FIRST_TIME NUMBER(10) DEFAULT NULL NULL, NEXT_SCN_BAS NUMBER(10) DEFAULT NULL NULL, NEXT_SCN_WRP NUMBER(10) DEFAULT NULL NULL, NEXT_TIME NUMBER(10) DEFAULT NULL NULL, FIRST_SCN NUMBER(10) DEFAULT NULL NULL, NEXT_SCN NUMBER(10) DEFAULT NULL NULL, RESETLOGS_SCN NUMBER(10) NOT NULL, BLOCKS NUMBER(10) DEFAULT NULL NULL, BLOCK_SIZE NUMBER(10) DEFAULT NULL NULL, OLD_BLOCKS NUMBER(10) DEFAULT NULL NULL, CREATE_DATE DATE DEFAULT NULL NULL, ERROR1 NUMBER(10) DEFAULT NULL NULL, ERROR2 NUMBER(10) DEFAULT NULL NULL, FILENAME VARCHAR2(513) DEFAULT NULL NULL, TS1 NUMBER(10) DEFAULT NULL NULL, TS2 NUMBER(10) DEFAULT NULL NULL, ENDIAN NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 NUMBER(10) DEFAULT NULL NULL, SPARE4 NUMBER(10) DEFAULT NULL NULL, SPARE5 DATE DEFAULT NULL NULL, SPARE6 VARCHAR2(65) DEFAULT NULL NULL, SPARE7 VARCHAR2(129) DEFAULT NULL NULL, TS3 NUMBER(10) DEFAULT NULL NULL, PRESETLOGS_SCN NUMBER(10) NOT NULL, SPARE8 NUMBER(10) DEFAULT NULL NULL, SPARE9 NUMBER(10) DEFAULT NULL NULL, SPARE10 NUMBER(10) DEFAULT NULL NULL, OLD_STATUS1 NUMBER(10) DEFAULT NULL NULL, OLD_STATUS2 NUMBER(10) DEFAULT NULL NULL, OLD_FILENAME VARCHAR2(513) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX redo_log_idx ON REDO_LOG (DBID, THREAD#, RESETLOGS_SCN, RESETLOGS_TIME)');
        $this->addSql('CREATE TABLE ROLLING$CONNECTIONS (SOURCE_RDBID NUMBER(10) DEFAULT NULL NULL, DEST_RDBID NUMBER(10) DEFAULT NULL NULL, ATTRIBUTES NUMBER(10) DEFAULT NULL NULL, SERVICE_NAME VARCHAR2(256) DEFAULT NULL NULL, CONN_HANDLE NUMBER(10) DEFAULT NULL NULL, CONNECT_TIME TIMESTAMP(0) DEFAULT NULL NULL, SEND_TIME TIMESTAMP(0) DEFAULT NULL NULL, DISCONNECT_TIME TIMESTAMP(0) DEFAULT NULL NULL, UPDATE_TIME TIMESTAMP(0) DEFAULT NULL NULL, SOURCE_PID NUMBER(10) DEFAULT NULL NULL, DEST_PID NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(128) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE ROLLING$DATABASES (RDBID NUMBER(10) DEFAULT NULL NULL, ATTRIBUTES NUMBER(10) DEFAULT NULL NULL, ATTRIBUTES2 NUMBER(10) DEFAULT NULL NULL, DBUN VARCHAR2(128) DEFAULT NULL NULL, DBID NUMBER(10) DEFAULT NULL NULL, PROD_RSCN NUMBER(10) DEFAULT NULL NULL, PROD_RID NUMBER(10) DEFAULT NULL NULL, PROD_SCN NUMBER(10) DEFAULT NULL NULL, CONS_RSCN NUMBER(10) DEFAULT NULL NULL, CONS_RID NUMBER(10) DEFAULT NULL NULL, CONS_SCN NUMBER(10) DEFAULT NULL NULL, ENGINE_STATUS NUMBER(10) DEFAULT NULL NULL, VERSION VARCHAR2(128) DEFAULT NULL NULL, REDO_SOURCE NUMBER(10) DEFAULT NULL NULL, UPDATE_TIME TIMESTAMP(0) DEFAULT NULL NULL, REVISION NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(128) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE ROLLING$DIRECTIVES (DIRECTID NUMBER(10) DEFAULT NULL NULL, PHASE NUMBER(10) DEFAULT NULL NULL, TASKID NUMBER(10) DEFAULT NULL NULL, FEATURE VARCHAR2(32) DEFAULT NULL NULL, DESCRIPTION VARCHAR2(256) DEFAULT NULL NULL, TARGET NUMBER(10) DEFAULT NULL NULL, FLAGS VARCHAR2(64) DEFAULT NULL NULL, OPCODE NUMBER(10) DEFAULT NULL NULL, P1 VARCHAR2(256) DEFAULT NULL NULL, P2 VARCHAR2(256) DEFAULT NULL NULL, P3 VARCHAR2(256) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(256) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE ROLLING$EVENTS (EVENTID NUMBER(10) DEFAULT NULL NULL, INSTID NUMBER(10) DEFAULT NULL NULL, REVISION NUMBER(10) DEFAULT NULL NULL, EVENT_TIME TIMESTAMP(0) DEFAULT NULL NULL, TYPE VARCHAR2(16) DEFAULT NULL NULL, STATUS NUMBER(10) DEFAULT NULL NULL, MESSAGE VARCHAR2(256) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(128) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE ROLLING$PARAMETERS (SCOPE NUMBER(10) DEFAULT NULL NULL, NAME VARCHAR2(32) DEFAULT NULL NULL, ID NUMBER(10) DEFAULT NULL NULL, DESCRIP VARCHAR2(256) DEFAULT NULL NULL, TYPE NUMBER(10) DEFAULT NULL NULL, DATATYPE NUMBER(10) DEFAULT NULL NULL, ATTRIBUTES NUMBER(10) DEFAULT NULL NULL, CURVAL VARCHAR2(1024) DEFAULT NULL NULL, LSTVAL VARCHAR2(1024) DEFAULT NULL NULL, DEFVAL VARCHAR2(1024) DEFAULT NULL NULL, MINVAL NUMBER(10) DEFAULT NULL NULL, MAXVAL NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(128) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE ROLLING$PLAN (INSTID NUMBER(10) DEFAULT NULL NULL, BATCHID NUMBER(10) DEFAULT NULL NULL, DIRECTID NUMBER(10) DEFAULT NULL NULL, TASKID NUMBER(10) DEFAULT NULL NULL, REVISION NUMBER(10) DEFAULT NULL NULL, PHASE NUMBER(10) DEFAULT NULL NULL, STATUS NUMBER(10) DEFAULT NULL NULL, PROGRESS NUMBER(10) DEFAULT NULL NULL, SOURCE NUMBER(10) DEFAULT NULL NULL, TARGET NUMBER(10) DEFAULT NULL NULL, RFLAGS NUMBER(10) DEFAULT NULL NULL, OPCODE NUMBER(10) DEFAULT NULL NULL, P1 VARCHAR2(256) DEFAULT NULL NULL, P2 VARCHAR2(256) DEFAULT NULL NULL, P3 VARCHAR2(256) DEFAULT NULL NULL, P4 VARCHAR2(256) DEFAULT NULL NULL, DESCRIPTION VARCHAR2(256) DEFAULT NULL NULL, EXEC_STATUS NUMBER(10) DEFAULT NULL NULL, EXEC_INFO VARCHAR2(256) DEFAULT NULL NULL, EXEC_TIME TIMESTAMP(0) DEFAULT NULL NULL, FINISH_TIME TIMESTAMP(0) DEFAULT NULL NULL, POST_STATUS NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(256) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE ROLLING$STATISTICS (STATID NUMBER(10) DEFAULT NULL NULL, RDBID NUMBER(10) DEFAULT NULL NULL, ATTRIBUTES NUMBER(10) DEFAULT NULL NULL, TYPE NUMBER(10) DEFAULT NULL NULL, NAME VARCHAR2(256) DEFAULT NULL NULL, VALUESTR VARCHAR2(256) DEFAULT NULL NULL, VALUENUM NUMBER(10) DEFAULT NULL NULL, VALUETS TIMESTAMP(0) DEFAULT NULL NULL, VALUEINT VARCHAR2(255) DEFAULT NULL NULL, UPDATE_TIME TIMESTAMP(0) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(128) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE ROLLING$STATUS (REVISION NUMBER(10) DEFAULT NULL NULL, PHASE NUMBER(10) DEFAULT NULL NULL, BATCHID NUMBER(10) DEFAULT NULL NULL, STATUS NUMBER(10) DEFAULT NULL NULL, COORDID NUMBER(10) DEFAULT NULL NULL, OPRIMARY NUMBER(10) DEFAULT NULL NULL, FPRIMARY NUMBER(10) DEFAULT NULL NULL, PID NUMBER(10) DEFAULT NULL NULL, INSTANCE NUMBER(10) DEFAULT NULL NULL, DBTOTAL NUMBER(10) DEFAULT NULL NULL, DBACTIVE NUMBER(10) DEFAULT NULL NULL, LOCATION VARCHAR2(128) DEFAULT NULL NULL, INIT_TIME TIMESTAMP(0) DEFAULT NULL NULL, BUILD_TIME TIMESTAMP(0) DEFAULT NULL NULL, START_TIME TIMESTAMP(0) DEFAULT NULL NULL, SWITCH_TIME TIMESTAMP(0) DEFAULT NULL NULL, FINISH_TIME TIMESTAMP(0) DEFAULT NULL NULL, LAST_INSTID NUMBER(10) DEFAULT NULL NULL, LAST_BATCHID NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(128) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE MVIEW$_ADV_WORKLOAD (QUERYID# NUMBER(10) NOT NULL, COLLECTIONID# NUMBER(10) NOT NULL, COLLECTTIME DATE NOT NULL, APPLICATION VARCHAR2(128) DEFAULT NULL NULL, CARDINALITY NUMBER(10) DEFAULT NULL NULL, RESULTSIZE NUMBER(10) DEFAULT NULL NULL, UNAME VARCHAR2(128) NOT NULL, QDATE DATE DEFAULT NULL NULL, PRIORITY NUMBER(10) DEFAULT NULL NULL, EXEC_TIME NUMBER(10) DEFAULT NULL NULL, SQL_TEXT VARCHAR2(255) NOT NULL, SQL_TEXTLEN NUMBER(10) NOT NULL, SQL_HASH NUMBER(10) DEFAULT NULL NULL, SQL_ADDR RAW(255) DEFAULT NULL NULL, FREQUENCY NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(QUERYID#))');
        $this->addSql('CREATE INDEX mview$_adv_workload_idx_01 ON MVIEW$_ADV_WORKLOAD (COLLECTIONID#, QUERYID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_WORKLOAD IS \'Shared workload repository for DBA users of summary advisor\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_BASETABLE (COLLECTIONID# NUMBER(10) NOT NULL, QUERYID# NUMBER(10) NOT NULL, OWNER VARCHAR2(128) DEFAULT NULL NULL, TABLE_NAME VARCHAR2(128) DEFAULT NULL NULL, TABLE_TYPE NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX mview$_adv_basetable_idx_01 ON MVIEW$_ADV_BASETABLE (QUERYID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_BASETABLE IS \'Base tables refered by a query\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_SQLDEPEND (COLLECTIONID# NUMBER(10) DEFAULT NULL NULL, INST_ID NUMBER(10) DEFAULT NULL NULL, FROM_ADDRESS RAW(255) DEFAULT NULL NULL, FROM_HASH NUMBER(10) DEFAULT NULL NULL, TO_OWNER VARCHAR2(128) DEFAULT NULL NULL, TO_NAME VARCHAR2(1000) DEFAULT NULL NULL, TO_TYPE NUMBER(10) DEFAULT NULL NULL, CARDINALITY NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX mview$_adv_sqldepend_idx_01 ON MVIEW$_ADV_SQLDEPEND (COLLECTIONID#, FROM_ADDRESS, FROM_HASH, INST_ID)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_SQLDEPEND IS \'Temporary table for workload collections\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_PRETTY (QUERYID# NUMBER(10) DEFAULT NULL NULL, SQL_TEXT VARCHAR2(255) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX mview$_adv_pretty_idx_01 ON MVIEW$_ADV_PRETTY (QUERYID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_PRETTY IS \'Table for sql parsing\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_TEMP (ID# NUMBER(10) DEFAULT NULL NULL, SEQ# NUMBER(10) DEFAULT NULL NULL, TEXT VARCHAR2(255) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX mview$_adv_temp_idx_01 ON MVIEW$_ADV_TEMP (ID#, SEQ#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_TEMP IS \'Table for temporary data\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_FILTER (FILTERID# NUMBER(10) NOT NULL, SUBFILTERNUM# NUMBER(10) NOT NULL, SUBFILTERTYPE NUMBER(10) NOT NULL, STR_VALUE VARCHAR2(1028) DEFAULT NULL NULL, NUM_VALUE1 NUMBER(10) DEFAULT NULL NULL, NUM_VALUE2 NUMBER(10) DEFAULT NULL NULL, DATE_VALUE1 DATE DEFAULT NULL NULL, DATE_VALUE2 DATE DEFAULT NULL NULL, PRIMARY KEY(FILTERID#, SUBFILTERNUM#))');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_FILTER IS \'Table for workload filter definition\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_LOG (RUNID# NUMBER(10) NOT NULL, FILTERID# NUMBER(10) DEFAULT NULL NULL, RUN_BEGIN DATE DEFAULT NULL NULL, RUN_END DATE DEFAULT NULL NULL, RUN_TYPE NUMBER(10) DEFAULT NULL NULL, UNAME VARCHAR2(128) DEFAULT NULL NULL, STATUS NUMBER(10) NOT NULL, MESSAGE VARCHAR2(2000) DEFAULT NULL NULL, COMPLETED NUMBER(10) DEFAULT NULL NULL, TOTAL NUMBER(10) DEFAULT NULL NULL, ERROR_CODE VARCHAR2(20) DEFAULT NULL NULL, PRIMARY KEY(RUNID#))');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_LOG IS \'Log all calls to summary advisory functions\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_FILTERINSTANCE (RUNID# NUMBER(10) NOT NULL, FILTERID# NUMBER(10) DEFAULT NULL NULL, SUBFILTERNUM# NUMBER(10) DEFAULT NULL NULL, SUBFILTERTYPE NUMBER(10) DEFAULT NULL NULL, STR_VALUE VARCHAR2(1028) DEFAULT NULL NULL, NUM_VALUE1 NUMBER(10) DEFAULT NULL NULL, NUM_VALUE2 NUMBER(10) DEFAULT NULL NULL, DATE_VALUE1 DATE DEFAULT NULL NULL, DATE_VALUE2 DATE DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX IDX_C8876A7B32852AD6 ON MVIEW$_ADV_FILTERINSTANCE (RUNID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_FILTERINSTANCE IS \'Table for workload filter instance definition\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_LEVEL (RUNID# NUMBER(10) NOT NULL, LEVELID# NUMBER(10) NOT NULL, DIMOBJ# NUMBER(10) DEFAULT NULL NULL, FLAGS NUMBER(10) NOT NULL, TBLOBJ# NUMBER(10) NOT NULL, COLUMNLIST RAW(255) NOT NULL, LEVELNAME VARCHAR2(128) DEFAULT NULL NULL, PRIMARY KEY(RUNID#, LEVELID#))');
        $this->addSql('CREATE INDEX IDX_6C67336E32852AD6 ON MVIEW$_ADV_LEVEL (RUNID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_LEVEL IS \'Level definition\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_ROLLUP (RUNID# NUMBER(10) NOT NULL, CLEVELID# NUMBER(10) NOT NULL, PLEVELID# NUMBER(10) NOT NULL, FLAGS NUMBER(10) NOT NULL, PRIMARY KEY(RUNID#, CLEVELID#, PLEVELID#))');
        $this->addSql('CREATE INDEX IDX_CB16CB3332852AD6BB28307A ON MVIEW$_ADV_ROLLUP (RUNID#, CLEVELID#)');
        $this->addSql('CREATE INDEX IDX_CB16CB3332852AD6 ON MVIEW$_ADV_ROLLUP (RUNID#)');
        $this->addSql('CREATE INDEX IDX_CB16CB3332852AD62E654ECE ON MVIEW$_ADV_ROLLUP (RUNID#, PLEVELID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_ROLLUP IS \'Each row repesents either a functional dependency or join-key relationship\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_AJG (AJGID# NUMBER(10) NOT NULL, RUNID# NUMBER(10) NOT NULL, AJGDESLEN NUMBER(10) NOT NULL, AJGDES BLOB NOT NULL, HASHVALUE NUMBER(10) NOT NULL, FREQUENCY NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(AJGID#))');
        $this->addSql('CREATE INDEX IDX_4D6F069A32852AD6 ON MVIEW$_ADV_AJG (RUNID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_AJG IS \'Anchor-join graph representation\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_FJG (FJGID# NUMBER(10) NOT NULL, AJGID# NUMBER(10) NOT NULL, FJGDESLEN NUMBER(10) NOT NULL, FJGDES BLOB NOT NULL, HASHVALUE NUMBER(10) NOT NULL, FREQUENCY NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(FJGID#))');
        $this->addSql('CREATE INDEX IDX_4820101F287F153A ON MVIEW$_ADV_FJG (AJGID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_FJG IS \'Representation for query join sub-graph not in AJG \'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_GC (GCID# NUMBER(10) NOT NULL, FJGID# NUMBER(10) NOT NULL, GCDESLEN NUMBER(10) NOT NULL, GCDES BLOB NOT NULL, HASHVALUE NUMBER(10) NOT NULL, FREQUENCY NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(GCID#))');
        $this->addSql('CREATE INDEX IDX_FD8BAD23357A2582 ON MVIEW$_ADV_GC (FJGID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_GC IS \'Group-by columns of a query\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_CLIQUE (CLIQUEID# NUMBER(10) NOT NULL, RUNID# NUMBER(10) NOT NULL, CLIQUEDESLEN NUMBER(10) NOT NULL, CLIQUEDES BLOB NOT NULL, HASHVALUE NUMBER(10) NOT NULL, FREQUENCY NUMBER(10) NOT NULL, BYTECOST NUMBER(10) NOT NULL, ROWSIZE NUMBER(10) NOT NULL, NUMROWS NUMBER(10) NOT NULL, PRIMARY KEY(CLIQUEID#))');
        $this->addSql('CREATE INDEX IDX_AC1442732852AD6 ON MVIEW$_ADV_CLIQUE (RUNID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_CLIQUE IS \'Table for storing canonical form of Clique queries\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_ELIGIBLE (SUMOBJN# NUMBER(10) NOT NULL, RUNID# NUMBER(10) NOT NULL, BYTECOST NUMBER(10) NOT NULL, FLAGS NUMBER(10) NOT NULL, FREQUENCY NUMBER(10) NOT NULL, PRIMARY KEY(SUMOBJN#, RUNID#))');
        $this->addSql('CREATE INDEX IDX_86980FC332852AD6 ON MVIEW$_ADV_ELIGIBLE (RUNID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_ELIGIBLE IS \'Summary management rewrite eligibility information\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_OUTPUT (RUNID# NUMBER(10) NOT NULL, OUTPUT_TYPE NUMBER(10) NOT NULL, RANK# NUMBER(10) NOT NULL, ACTION_TYPE VARCHAR2(6) DEFAULT NULL NULL, SUMMARY_OWNER VARCHAR2(128) DEFAULT NULL NULL, SUMMARY_NAME VARCHAR2(128) DEFAULT NULL NULL, GROUP_BY_COLUMNS VARCHAR2(2000) DEFAULT NULL NULL, WHERE_CLAUSE VARCHAR2(2000) DEFAULT NULL NULL, FROM_CLAUSE VARCHAR2(2000) DEFAULT NULL NULL, MEASURES_LIST VARCHAR2(2000) DEFAULT NULL NULL, FACT_TABLES VARCHAR2(1000) DEFAULT NULL NULL, GROUPING_LEVELS VARCHAR2(2000) DEFAULT NULL NULL, QUERYLEN NUMBER(10) DEFAULT NULL NULL, QUERY_TEXT VARCHAR2(255) DEFAULT NULL NULL, STORAGE_IN_BYTES NUMBER(10) DEFAULT NULL NULL, PCT_PERFORMANCE_GAIN NUMBER(10) DEFAULT NULL NULL, FREQUENCY NUMBER(10) DEFAULT NULL NULL, CUMULATIVE_BENEFIT NUMBER(10) DEFAULT NULL NULL, BENEFIT_TO_COST_RATIO NUMBER(10) NOT NULL, VALIDATED NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(RUNID#, RANK#))');
        $this->addSql('CREATE INDEX IDX_D9F2B42832852AD6 ON MVIEW$_ADV_OUTPUT (RUNID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_OUTPUT IS \'Output table for summary recommendations and evaluations\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_EXCEPTIONS (RUNID# NUMBER(10) DEFAULT NULL NULL, OWNER VARCHAR2(128) DEFAULT NULL NULL, TABLE_NAME VARCHAR2(128) DEFAULT NULL NULL, DIMENSION_NAME VARCHAR2(128) DEFAULT NULL NULL, RELATIONSHIP VARCHAR2(11) DEFAULT NULL NULL, BAD_ROWID VARCHAR2(255) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX IDX_AB6A35B732852AD6 ON MVIEW$_ADV_EXCEPTIONS (RUNID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_EXCEPTIONS IS \'Output table for dimension validations\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_PARAMETERS (PARAMETER_NAME VARCHAR2(128) NOT NULL, PARAMETER_TYPE NUMBER(10) NOT NULL, STRING_VALUE VARCHAR2(30) DEFAULT NULL NULL, DATE_VALUE DATE DEFAULT NULL NULL, NUMERICAL_VALUE NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(PARAMETER_NAME))');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_PARAMETERS IS \'Summary advisor tuning parameters\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_INFO (RUNID# NUMBER(10) NOT NULL, SEQ# NUMBER(10) NOT NULL, TYPE NUMBER(10) NOT NULL, INFOLEN NUMBER(10) NOT NULL, INFO BLOB DEFAULT NULL NULL, STATUS NUMBER(10) DEFAULT NULL NULL, FLAG NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(RUNID#, SEQ#))');
        $this->addSql('CREATE INDEX IDX_FF5017A232852AD6 ON MVIEW$_ADV_INFO (RUNID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_INFO IS \'Internal table for passing information from the SQL analyzer\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_JOURNAL (RUNID# NUMBER(10) NOT NULL, SEQ# NUMBER(10) NOT NULL, TIMESTAMP DATE NOT NULL, FLAGS NUMBER(10) NOT NULL, NUM NUMBER(10) DEFAULT NULL NULL, TEXT VARCHAR2(255) DEFAULT NULL NULL, TEXTLEN NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(RUNID#, SEQ#))');
        $this->addSql('CREATE INDEX IDX_D8DEFD9C32852AD6 ON MVIEW$_ADV_JOURNAL (RUNID#)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_JOURNAL IS \'Summary advisor journal table for debugging and information\'');
        $this->addSql('CREATE TABLE MVIEW$_ADV_PLAN (STATEMENT_ID VARCHAR2(30) DEFAULT NULL NULL, TIMESTAMP DATE DEFAULT NULL NULL, REMARKS VARCHAR2(80) DEFAULT NULL NULL, OPERATION VARCHAR2(30) DEFAULT NULL NULL, OPTIONS VARCHAR2(255) DEFAULT NULL NULL, OBJECT_NODE VARCHAR2(128) DEFAULT NULL NULL, OBJECT_OWNER VARCHAR2(128) DEFAULT NULL NULL, OBJECT_NAME VARCHAR2(128) DEFAULT NULL NULL, OBJECT_INSTANCE NUMBER(10) DEFAULT NULL NULL, OBJECT_TYPE VARCHAR2(30) DEFAULT NULL NULL, OPTIMIZER VARCHAR2(255) DEFAULT NULL NULL, SEARCH_COLUMNS NUMBER(10) DEFAULT NULL NULL, ID NUMBER(10) DEFAULT NULL NULL, PARENT_ID NUMBER(10) DEFAULT NULL NULL, POSITION NUMBER(10) DEFAULT NULL NULL, COST NUMBER(10) DEFAULT NULL NULL, CARDINALITY NUMBER(10) DEFAULT NULL NULL, BYTES NUMBER(10) DEFAULT NULL NULL, OTHER_TAG VARCHAR2(255) DEFAULT NULL NULL, PARTITION_START VARCHAR2(255) DEFAULT NULL NULL, PARTITION_STOP VARCHAR2(255) DEFAULT NULL NULL, PARTITION_ID NUMBER(10) DEFAULT NULL NULL, OTHER VARCHAR2(255) DEFAULT NULL NULL, DISTRIBUTION VARCHAR2(30) DEFAULT NULL NULL, CPU_COST NUMBER(10) DEFAULT NULL NULL, IO_COST NUMBER(10) DEFAULT NULL NULL, TEMP_SPACE NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('COMMENT ON TABLE MVIEW$_ADV_PLAN IS \'Private plan table for estimate_mview_size operations\'');
        $this->addSql('CREATE TABLE AQ$_QUEUE_TABLES (SCHEMA VARCHAR2(128) NOT NULL, NAME VARCHAR2(128) NOT NULL, UDATA_TYPE NUMBER(10) NOT NULL, OBJNO NUMBER(10) NOT NULL, FLAGS NUMBER(10) NOT NULL, SORT_COLS NUMBER(10) NOT NULL, TIMEZONE VARCHAR2(64) DEFAULT NULL NULL, TABLE_COMMENT VARCHAR2(2000) DEFAULT NULL NULL, PRIMARY KEY(OBJNO))');
        $this->addSql('CREATE INDEX i1_queue_tables ON AQ$_QUEUE_TABLES (OBJNO, SCHEMA, FLAGS)');
        $this->addSql('CREATE TABLE AQ$_QUEUES (OID RAW(255) NOT NULL, EVENTID NUMBER(10) NOT NULL, NAME VARCHAR2(128) NOT NULL, TABLE_OBJNO NUMBER(10) NOT NULL, USAGE NUMBER(10) NOT NULL, ENABLE_FLAG NUMBER(10) NOT NULL, MAX_RETRIES NUMBER(10) DEFAULT NULL NULL, RETRY_DELAY NUMBER(10) DEFAULT NULL NULL, PROPERTIES NUMBER(10) DEFAULT NULL NULL, RET_TIME NUMBER(10) DEFAULT NULL NULL, QUEUE_COMMENT VARCHAR2(2000) DEFAULT NULL NULL, SUBSCRIBERS VARCHAR2(255) DEFAULT NULL NULL, MEMORY_THRESHOLD NUMBER(10) DEFAULT NULL NULL, SERVICE_NAME VARCHAR2(64) DEFAULT NULL NULL, NETWORK_NAME VARCHAR2(256) DEFAULT NULL NULL, SUB_OID RAW(255) DEFAULT NULL NULL, SHARDED NUMBER(10) DEFAULT NULL NULL, BASE_QUEUE NUMBER(10) DEFAULT 0 NULL, PRIMARY KEY(OID))');
        $this->addSql('CREATE UNIQUE INDEX aq$_queues_check ON AQ$_QUEUES (NAME, TABLE_OBJNO)');
        $this->addSql('CREATE INDEX i1_queues ON AQ$_QUEUES (NAME, EVENTID, TABLE_OBJNO)');
        $this->addSql('CREATE TABLE AQ$_SCHEDULES (OID RAW(255) NOT NULL, DESTINATION VARCHAR2(390) NOT NULL, START_TIME DATE DEFAULT NULL NULL, DURATION VARCHAR2(8) DEFAULT NULL NULL, NEXT_TIME VARCHAR2(128) DEFAULT NULL NULL, LATENCY VARCHAR2(8) DEFAULT NULL NULL, LAST_TIME DATE DEFAULT NULL NULL, JOBNO NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(OID, DESTINATION))');
        $this->addSql('CREATE UNIQUE INDEX aq$_schedules_check ON AQ$_SCHEDULES (JOBNO)');
        $this->addSql('CREATE TABLE AQ$_INTERNET_AGENTS (AGENT_NAME VARCHAR2(512) NOT NULL, PROTOCOL NUMBER(10) NOT NULL, SPARE1 VARCHAR2(128) DEFAULT NULL NULL, PRIMARY KEY(AGENT_NAME))');
        $this->addSql('CREATE TABLE AQ$_INTERNET_AGENT_PRIVS (AGENT_NAME VARCHAR2(512) NOT NULL, DB_USERNAME VARCHAR2(128) NOT NULL)');
        $this->addSql('CREATE UNIQUE INDEX unq_pairs ON AQ$_INTERNET_AGENT_PRIVS (AGENT_NAME, DB_USERNAME)');
        $this->addSql('CREATE INDEX IDX_651AC46F39E6F6DE ON AQ$_INTERNET_AGENT_PRIVS (AGENT_NAME)');
        $this->addSql('CREATE TABLE SCHEDULER_PROGRAM_ARGS_TBL (OWNER VARCHAR2(128) NOT NULL, PROGRAM_NAME VARCHAR2(128) NOT NULL, ARGUMENT_NAME VARCHAR2(128) DEFAULT NULL NULL, ARGUMENT_POSITION NUMBER(10) NOT NULL, ARGUMENT_TYPE VARCHAR2(257) DEFAULT NULL NULL, METADATA_ATTRIBUTE VARCHAR2(19) DEFAULT NULL NULL, DEFAULT_VALUE VARCHAR2(4000) DEFAULT NULL NULL, DEFAULT_ANYDATA_VALUE VARCHAR2(255) DEFAULT NULL NULL, OUT_ARGUMENT VARCHAR2(5) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE SCHEDULER_JOB_ARGS_TBL (OWNER VARCHAR2(128) DEFAULT NULL NULL, JOB_NAME VARCHAR2(128) DEFAULT NULL NULL, ARGUMENT_NAME VARCHAR2(128) DEFAULT NULL NULL, ARGUMENT_POSITION NUMBER(10) DEFAULT NULL NULL, ARGUMENT_TYPE VARCHAR2(257) DEFAULT NULL NULL, VALUE VARCHAR2(4000) DEFAULT NULL NULL, ANYDATA_VALUE VARCHAR2(255) DEFAULT NULL NULL, OUT_ARGUMENT VARCHAR2(5) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGSTDBY$PARAMETERS (NAME VARCHAR2(30) DEFAULT NULL NULL, VALUE VARCHAR2(2000) DEFAULT NULL NULL, TYPE NUMBER(10) DEFAULT NULL NULL, SCN NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(2000) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGSTDBY$EVENTS (EVENT_TIME TIMESTAMP(0) NOT NULL, CURRENT_SCN NUMBER(10) DEFAULT NULL NULL, COMMIT_SCN NUMBER(10) DEFAULT NULL NULL, XIDUSN NUMBER(10) DEFAULT NULL NULL, XIDSLT NUMBER(10) DEFAULT NULL NULL, XIDSQN NUMBER(10) DEFAULT NULL NULL, ERRVAL NUMBER(10) DEFAULT NULL NULL, EVENT VARCHAR2(2000) DEFAULT NULL NULL, FULL_EVENT CLOB DEFAULT NULL NULL, ERROR VARCHAR2(2000) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(2000) DEFAULT NULL NULL, CON_NAME VARCHAR2(30) DEFAULT NULL NULL, CON_ID NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logstdby$events_ind ON LOGSTDBY$EVENTS (EVENT_TIME)');
        $this->addSql('CREATE INDEX logstdby$events_ind_scn ON LOGSTDBY$EVENTS (COMMIT_SCN)');
        $this->addSql('CREATE INDEX logstdby$events_ind_xid ON LOGSTDBY$EVENTS (XIDUSN, XIDSLT, XIDSQN)');
        $this->addSql('CREATE TABLE LOGSTDBY$APPLY_MILESTONE (SESSION_ID NUMBER(10) NOT NULL, COMMIT_SCN NUMBER(10) NOT NULL, COMMIT_TIME DATE DEFAULT NULL NULL, SYNCH_SCN NUMBER(10) NOT NULL, EPOCH NUMBER(10) NOT NULL, PROCESSED_SCN NUMBER(10) NOT NULL, PROCESSED_TIME DATE DEFAULT NULL NULL, FETCHLWM_SCN NUMBER(10) DEFAULT (0) NOT NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(2000) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, LWM_UPD_TIME DATE DEFAULT NULL NULL, SPARE4 NUMBER(10) DEFAULT NULL NULL, SPARE5 NUMBER(10) DEFAULT NULL NULL, SPARE6 NUMBER(10) DEFAULT NULL NULL, SPARE7 DATE DEFAULT NULL NULL, PTO_RECOVERY_SCN NUMBER(10) DEFAULT NULL NULL, PTO_RECOVERY_INCARNATION NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGSTDBY$SCN (OBJ# NUMBER(10) DEFAULT NULL NULL, OBJNAME VARCHAR2(4000) DEFAULT NULL NULL, SCHEMA VARCHAR2(128) DEFAULT NULL NULL, TYPE VARCHAR2(20) DEFAULT NULL NULL, SCN NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(2000) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGSTDBY$FLASHBACK_SCN (PRIMARY_SCN NUMBER(10) NOT NULL, PRIMARY_TIME DATE DEFAULT NULL NULL, STANDBY_SCN NUMBER(10) DEFAULT NULL NULL, STANDBY_TIME DATE DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 DATE DEFAULT NULL NULL, PRIMARY KEY(PRIMARY_SCN))');
        $this->addSql('CREATE TABLE LOGSTDBY$PLSQL (SESSION_ID NUMBER(10) DEFAULT NULL NULL, START_FINISH NUMBER(10) DEFAULT NULL NULL, CALL_TEXT CLOB DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(2000) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGSTDBY$SKIP_TRANSACTION (XIDUSN NUMBER(10) DEFAULT NULL NULL, XIDSLT NUMBER(10) DEFAULT NULL NULL, XIDSQN NUMBER(10) DEFAULT NULL NULL, ACTIVE NUMBER(10) DEFAULT NULL NULL, COMMIT_SCN NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(2000) DEFAULT NULL NULL, CON_NAME VARCHAR2(384) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGSTDBY$SKIP (ERROR NUMBER(10) DEFAULT NULL NULL, STATEMENT_OPT VARCHAR2(128) DEFAULT NULL NULL, SCHEMA VARCHAR2(128) DEFAULT NULL NULL, NAME VARCHAR2(261) DEFAULT NULL NULL, USE_LIKE NUMBER(10) DEFAULT NULL NULL, ESC VARCHAR2(1) DEFAULT NULL NULL, PROC VARCHAR2(392) DEFAULT NULL NULL, ACTIVE NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(2000) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logstdby$skip_idx1 ON LOGSTDBY$SKIP (USE_LIKE, SCHEMA, NAME)');
        $this->addSql('CREATE INDEX logstdby$skip_idx2 ON LOGSTDBY$SKIP (STATEMENT_OPT)');
        $this->addSql('CREATE TABLE LOGSTDBY$SKIP_SUPPORT (ACTION NUMBER(10) NOT NULL, NAME VARCHAR2(128) NOT NULL, NAME2 VARCHAR2(128) DEFAULT NULL NULL, NAME3 VARCHAR2(128) DEFAULT NULL NULL, NAME4 VARCHAR2(128) DEFAULT NULL NULL, NAME5 VARCHAR2(128) DEFAULT NULL NULL, REG NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(2000) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logstdby$skip_ind ON LOGSTDBY$SKIP_SUPPORT (NAME, ACTION)');
        $this->addSql('CREATE TABLE LOGSTDBY$HISTORY (STREAM_SEQUENCE# NUMBER(10) DEFAULT NULL NULL, LMNR_SID NUMBER(10) DEFAULT NULL NULL, DBID NUMBER(10) DEFAULT NULL NULL, FIRST_CHANGE# NUMBER(10) DEFAULT NULL NULL, LAST_CHANGE# NUMBER(10) DEFAULT NULL NULL, SOURCE NUMBER(10) DEFAULT NULL NULL, STATUS NUMBER(10) DEFAULT NULL NULL, FIRST_TIME DATE DEFAULT NULL NULL, LAST_TIME DATE DEFAULT NULL NULL, DGNAME VARCHAR2(255) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(2000) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGSTDBY$EDS_TABLES (OWNER VARCHAR2(128) NOT NULL, TABLE_NAME VARCHAR2(128) NOT NULL, SHADOW_TABLE_NAME VARCHAR2(128) DEFAULT NULL NULL, BASE_TRIGGER_NAME VARCHAR2(128) DEFAULT NULL NULL, SHADOW_TRIGGER_NAME VARCHAR2(128) DEFAULT NULL NULL, DBLINK VARCHAR2(255) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, STATE VARCHAR2(255) DEFAULT NULL NULL, OBJV NUMBER(10) DEFAULT NULL NULL, OBJ# NUMBER(10) DEFAULT NULL NULL, SOBJ# NUMBER(10) DEFAULT NULL NULL, CTIME TIMESTAMP(0) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 VARCHAR2(255) DEFAULT NULL NULL, SPARE3 NUMBER(10) DEFAULT NULL NULL, MVIEW_NAME VARCHAR2(128) DEFAULT NULL NULL, MVIEW_LOG_NAME VARCHAR2(128) DEFAULT NULL NULL, MVIEW_TRIGGER_NAME VARCHAR2(128) DEFAULT NULL NULL, PRIMARY KEY(OWNER, TABLE_NAME))');
        $this->addSql('CREATE TABLE SQLPLUS_PRODUCT_PROFILE (PRODUCT VARCHAR2(30) NOT NULL, USERID VARCHAR2(128) DEFAULT NULL NULL, ATTRIBUTE VARCHAR2(240) DEFAULT NULL NULL, SCOPE VARCHAR2(240) DEFAULT NULL NULL, NUMERIC_VALUE NUMERIC(15, 2) DEFAULT NULL NULL, CHAR_VALUE VARCHAR2(240) DEFAULT NULL NULL, DATE_VALUE DATE DEFAULT NULL NULL, LONG_VALUE VARCHAR2(255) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE HELP (TOPIC VARCHAR2(50) NOT NULL, SEQ NUMBER(10) NOT NULL, INFO VARCHAR2(80) DEFAULT NULL NULL, PRIMARY KEY(TOPIC, SEQ))');
        $this->addSql('CREATE TABLE LOGMNR_GT_TAB_INCLUDE$ (SCHEMA_NAME VARCHAR2(390) DEFAULT NULL NULL, TABLE_NAME VARCHAR2(390) DEFAULT NULL NULL, PDB_NAME VARCHAR2(390) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(4000) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGMNR_GT_USER_INCLUDE$ (USER_NAME VARCHAR2(390) DEFAULT NULL NULL, USER_TYPE NUMBER(10) DEFAULT NULL NULL, PDB_NAME VARCHAR2(390) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(4000) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGMNR_GT_XID_INCLUDE$ (XIDUSN NUMBER(10) DEFAULT NULL NULL, XIDSLT NUMBER(10) DEFAULT NULL NULL, XIDSQN NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(4000) DEFAULT NULL NULL, PDBID NUMBER(10) DEFAULT NULL NULL, PDB_NAME VARCHAR2(390) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGMNRT_MDDL$ (SOURCE_OBJ# NUMBER(10) NOT NULL, SOURCE_ROWID VARCHAR2(255) NOT NULL, DEST_ROWID VARCHAR2(255) NOT NULL, PRIMARY KEY(SOURCE_OBJ#, SOURCE_ROWID))');
        $this->addSql('CREATE TABLE OL$ (OL_NAME VARCHAR2(128) DEFAULT NULL NULL, SQL_TEXT VARCHAR2(255) DEFAULT NULL NULL, TEXTLEN NUMBER(10) DEFAULT NULL NULL, SIGNATURE RAW(255) DEFAULT NULL NULL, HASH_VALUE NUMBER(10) DEFAULT NULL NULL, HASH_VALUE2 NUMBER(10) DEFAULT NULL NULL, CATEGORY VARCHAR2(128) DEFAULT NULL NULL, VERSION VARCHAR2(64) DEFAULT NULL NULL, CREATOR VARCHAR2(128) DEFAULT NULL NULL, TIMESTAMP DATE DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, HINTCOUNT NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 VARCHAR2(1000) DEFAULT NULL NULL)');
        $this->addSql('CREATE UNIQUE INDEX ol$name ON OL$ (OL_NAME)');
        $this->addSql('CREATE UNIQUE INDEX ol$signature ON OL$ (SIGNATURE, CATEGORY)');
        $this->addSql('CREATE TABLE OL$HINTS (OL_NAME VARCHAR2(128) DEFAULT NULL NULL, HINT# NUMBER(10) DEFAULT NULL NULL, CATEGORY VARCHAR2(128) DEFAULT NULL NULL, HINT_TYPE NUMBER(10) DEFAULT NULL NULL, HINT_TEXT VARCHAR2(512) DEFAULT NULL NULL, STAGE# NUMBER(10) DEFAULT NULL NULL, NODE# NUMBER(10) DEFAULT NULL NULL, TABLE_NAME VARCHAR2(128) DEFAULT NULL NULL, TABLE_TIN NUMBER(10) DEFAULT NULL NULL, TABLE_POS NUMBER(10) DEFAULT NULL NULL, REF_ID NUMBER(10) DEFAULT NULL NULL, USER_TABLE_NAME VARCHAR2(260) DEFAULT NULL NULL, COST DOUBLE PRECISION DEFAULT NULL NULL, CARDINALITY DOUBLE PRECISION DEFAULT NULL NULL, BYTES DOUBLE PRECISION DEFAULT NULL NULL, HINT_TEXTOFF NUMBER(10) DEFAULT NULL NULL, HINT_TEXTLEN NUMBER(10) DEFAULT NULL NULL, JOIN_PRED VARCHAR2(2000) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, HINT_STRING CLOB DEFAULT NULL NULL)');
        $this->addSql('CREATE UNIQUE INDEX ol$hnt_num ON OL$HINTS (OL_NAME, HINT#)');
        $this->addSql('CREATE TABLE OL$NODES (OL_NAME VARCHAR2(128) DEFAULT NULL NULL, CATEGORY VARCHAR2(128) DEFAULT NULL NULL, NODE_ID NUMBER(10) DEFAULT NULL NULL, PARENT_ID NUMBER(10) DEFAULT NULL NULL, NODE_TYPE NUMBER(10) DEFAULT NULL NULL, NODE_TEXTLEN NUMBER(10) DEFAULT NULL NULL, NODE_TEXTOFF NUMBER(10) DEFAULT NULL NULL, NODE_NAME VARCHAR2(64) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGMNR_DICTSTATE$ (LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, START_SCNBAS NUMBER(10) DEFAULT NULL NULL, START_SCNWRP NUMBER(10) DEFAULT NULL NULL, END_SCNBAS NUMBER(10) DEFAULT NULL NULL, END_SCNWRP NUMBER(10) DEFAULT NULL NULL, REDO_THREAD NUMBER(10) DEFAULT NULL NULL, RBASQN NUMBER(10) DEFAULT NULL NULL, RBABLK NUMBER(10) DEFAULT NULL NULL, RBABYTE NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE TABLE LOGMNRC_GTLO (LOGMNR_UID NUMBER(10) NOT NULL, KEYOBJ# NUMBER(10) NOT NULL, LVLCNT NUMBER(10) NOT NULL, BASEOBJ# NUMBER(10) NOT NULL, BASEOBJV# NUMBER(10) NOT NULL, LVL1OBJ# NUMBER(10) DEFAULT NULL NULL, LVL2OBJ# NUMBER(10) DEFAULT NULL NULL, LVL0TYPE# NUMBER(10) NOT NULL, LVL1TYPE# NUMBER(10) DEFAULT NULL NULL, LVL2TYPE# NUMBER(10) DEFAULT NULL NULL, OWNER# NUMBER(10) DEFAULT NULL NULL, OWNERNAME VARCHAR2(384) NOT NULL, LVL0NAME VARCHAR2(384) NOT NULL, LVL1NAME VARCHAR2(384) DEFAULT NULL NULL, LVL2NAME VARCHAR2(384) DEFAULT NULL NULL, INTCOLS NUMBER(10) NOT NULL, COLS NUMBER(10) DEFAULT NULL NULL, KERNELCOLS NUMBER(10) DEFAULT NULL NULL, TAB_FLAGS NUMBER(10) DEFAULT NULL NULL, TRIGFLAG NUMBER(10) DEFAULT NULL NULL, ASSOC# NUMBER(10) DEFAULT NULL NULL, OBJ_FLAGS NUMBER(10) DEFAULT NULL NULL, TS# NUMBER(10) DEFAULT NULL NULL, TSNAME VARCHAR2(90) DEFAULT NULL NULL, PROPERTY NUMBER(10) DEFAULT NULL NULL, START_SCN NUMBER(10) NOT NULL, DROP_SCN NUMBER(10) DEFAULT NULL NULL, XIDUSN NUMBER(10) DEFAULT NULL NULL, XIDSLT NUMBER(10) DEFAULT NULL NULL, XIDSQN NUMBER(10) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE1 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE2 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE3 VARCHAR2(1000) DEFAULT NULL NULL, LOGMNR_SPARE4 DATE DEFAULT NULL NULL, LOGMNR_SPARE5 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE6 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE7 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE8 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE9 NUMBER(10) DEFAULT NULL NULL, PARTTYPE NUMBER(10) DEFAULT NULL NULL, SUBPARTTYPE NUMBER(10) DEFAULT NULL NULL, UNSUPPORTEDCOLS NUMBER(10) DEFAULT NULL NULL, COMPLEXTYPECOLS NUMBER(10) DEFAULT NULL NULL, NTPARENTOBJNUM NUMBER(10) DEFAULT NULL NULL, NTPARENTOBJVERSION NUMBER(10) DEFAULT NULL NULL, NTPARENTINTCOLNUM NUMBER(10) DEFAULT NULL NULL, LOGMNRTLOFLAGS NUMBER(10) DEFAULT NULL NULL, LOGMNRMCV VARCHAR2(30) DEFAULT NULL NULL, ACDRFLAGS NUMBER(10) DEFAULT NULL NULL, ACDRTSOBJ# NUMBER(10) DEFAULT NULL NULL, ACDRROWTSINTCOL# NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, KEYOBJ#, BASEOBJV#))');
        $this->addSql('CREATE INDEX logmnrc_i2gtlo ON LOGMNRC_GTLO (LOGMNR_UID, BASEOBJ#, BASEOBJV#)');
        $this->addSql('CREATE INDEX logmnrc_i3gtlo ON LOGMNRC_GTLO (LOGMNR_UID, DROP_SCN)');
        $this->addSql('CREATE TABLE LOGMNRC_GTCS (LOGMNR_UID NUMBER(10) NOT NULL, OBJ# NUMBER(10) NOT NULL, OBJV# NUMBER(10) NOT NULL, SEGCOL# NUMBER(10) NOT NULL, INTCOL# NUMBER(10) NOT NULL, COLNAME VARCHAR2(384) NOT NULL, TYPE# NUMBER(10) NOT NULL, LENGTH NUMBER(10) DEFAULT NULL NULL, PRECISION NUMBER(10) DEFAULT NULL NULL, SCALE NUMBER(10) DEFAULT NULL NULL, INTERVAL_LEADING_PRECISION NUMBER(10) DEFAULT NULL NULL, INTERVAL_TRAILING_PRECISION NUMBER(10) DEFAULT NULL NULL, PROPERTY NUMBER(10) DEFAULT NULL NULL, TOID RAW(255) DEFAULT NULL NULL, CHARSETID NUMBER(10) DEFAULT NULL NULL, CHARSETFORM NUMBER(10) DEFAULT NULL NULL, TYPENAME VARCHAR2(384) DEFAULT NULL NULL, FQCOLNAME VARCHAR2(4000) DEFAULT NULL NULL, NUMINTCOLS NUMBER(10) DEFAULT NULL NULL, NUMATTRS NUMBER(10) DEFAULT NULL NULL, ADTORDER NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE1 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE2 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE3 VARCHAR2(1000) DEFAULT NULL NULL, LOGMNR_SPARE4 DATE DEFAULT NULL NULL, LOGMNR_SPARE5 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE6 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE7 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE8 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE9 NUMBER(10) DEFAULT NULL NULL, COL# NUMBER(10) DEFAULT NULL NULL, XTYPESCHEMANAME VARCHAR2(384) DEFAULT NULL NULL, XTYPENAME VARCHAR2(4000) DEFAULT NULL NULL, XFQCOLNAME VARCHAR2(4000) DEFAULT NULL NULL, XTOPINTCOL NUMBER(10) DEFAULT NULL NULL, XREFFEDTABLEOBJN NUMBER(10) DEFAULT NULL NULL, XREFFEDTABLEOBJV NUMBER(10) DEFAULT NULL NULL, XCOLTYPEFLAGS NUMBER(10) DEFAULT NULL NULL, XOPQTYPETYPE NUMBER(10) DEFAULT NULL NULL, XOPQTYPEFLAGS NUMBER(10) DEFAULT NULL NULL, XOPQLOBINTCOL NUMBER(10) DEFAULT NULL NULL, XOPQOBJINTCOL NUMBER(10) DEFAULT NULL NULL, XXMLINTCOL NUMBER(10) DEFAULT NULL NULL, EAOWNER# NUMBER(10) DEFAULT NULL NULL, EAMKEYID VARCHAR2(192) DEFAULT NULL NULL, EAENCALG NUMBER(10) DEFAULT NULL NULL, EAINTALG NUMBER(10) DEFAULT NULL NULL, EACOLKLC RAW(255) DEFAULT NULL NULL, EAKLCLEN NUMBER(10) DEFAULT NULL NULL, EAFLAGS NUMBER(10) DEFAULT NULL NULL, LOGMNRDERIVEDFLAGS NUMBER(10) DEFAULT NULL NULL, COLLID NUMBER(10) DEFAULT NULL NULL, COLLINTCOL# NUMBER(10) DEFAULT NULL NULL, ACDRRESCOL# NUMBER(10) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, OBJ#, OBJV#, INTCOL#))');
        $this->addSql('CREATE INDEX logmnrc_i2gtcs ON LOGMNRC_GTCS (LOGMNR_UID, OBJ#, OBJV#, SEGCOL#, INTCOL#)');
        $this->addSql('CREATE TABLE LOGMNRC_SEQ_GG (LOGMNR_UID NUMBER(10) NOT NULL, OBJ# NUMBER(10) NOT NULL, COMMIT_SCN NUMBER(10) NOT NULL, DROP_SCN NUMBER(10) DEFAULT NULL NULL, SEQ_FLAGS NUMBER(10) NOT NULL, OWNER# NUMBER(10) NOT NULL, OWNERNAME VARCHAR2(384) NOT NULL, OBJNAME VARCHAR2(384) NOT NULL, SEQCACHE NUMBER(10) DEFAULT NULL NULL, SEQINC NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(4000) DEFAULT NULL NULL, SPARE4 VARCHAR2(4000) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, OBJ#, COMMIT_SCN))');
        $this->addSql('CREATE INDEX logmnrc_i2seqgg ON LOGMNRC_SEQ_GG (LOGMNR_UID, DROP_SCN)');
        $this->addSql('CREATE TABLE LOGMNRC_CON_GG (LOGMNR_UID NUMBER(10) NOT NULL, CON# NUMBER(10) NOT NULL, NAME VARCHAR2(384) NOT NULL, COMMIT_SCN NUMBER(10) NOT NULL, DROP_SCN NUMBER(10) DEFAULT NULL NULL, BASEOBJ# NUMBER(10) NOT NULL, BASEOBJV# NUMBER(10) NOT NULL, FLAGS NUMBER(10) NOT NULL, INDEXOBJ# NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 NUMBER(10) DEFAULT NULL NULL, SPARE4 VARCHAR2(4000) DEFAULT NULL NULL, SPARE5 VARCHAR2(4000) DEFAULT NULL NULL, SPARE6 VARCHAR2(4000) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, CON#, COMMIT_SCN))');
        $this->addSql('CREATE INDEX logmnrc_i1congg ON LOGMNRC_CON_GG (LOGMNR_UID, BASEOBJ#, BASEOBJV#, COMMIT_SCN)');
        $this->addSql('CREATE INDEX logmnrc_i2congg ON LOGMNRC_CON_GG (LOGMNR_UID, DROP_SCN)');
        $this->addSql('CREATE TABLE LOGMNRC_CONCOL_GG (LOGMNR_UID NUMBER(10) NOT NULL, CON# NUMBER(10) NOT NULL, COMMIT_SCN NUMBER(10) NOT NULL, INTCOL# NUMBER(10) NOT NULL, POS# NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(4000) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, CON#, COMMIT_SCN, INTCOL#))');
        $this->addSql('CREATE TABLE LOGMNRC_IND_GG (LOGMNR_UID NUMBER(10) NOT NULL, OBJ# NUMBER(10) NOT NULL, NAME VARCHAR2(384) NOT NULL, COMMIT_SCN NUMBER(10) NOT NULL, DROP_SCN NUMBER(10) DEFAULT NULL NULL, BASEOBJ# NUMBER(10) NOT NULL, BASEOBJV# NUMBER(10) NOT NULL, FLAGS NUMBER(10) NOT NULL, OWNER# NUMBER(10) NOT NULL, OWNERNAME VARCHAR2(384) NOT NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 NUMBER(10) DEFAULT NULL NULL, SPARE4 VARCHAR2(4000) DEFAULT NULL NULL, SPARE5 VARCHAR2(4000) DEFAULT NULL NULL, SPARE6 VARCHAR2(4000) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, OBJ#, COMMIT_SCN))');
        $this->addSql('CREATE INDEX logmnrc_i1indgg ON LOGMNRC_IND_GG (LOGMNR_UID, BASEOBJ#, BASEOBJV#, COMMIT_SCN)');
        $this->addSql('CREATE INDEX logmnrc_i2indgg ON LOGMNRC_IND_GG (LOGMNR_UID, DROP_SCN)');
        $this->addSql('CREATE TABLE LOGMNRC_INDCOL_GG (LOGMNR_UID NUMBER(10) NOT NULL, OBJ# NUMBER(10) NOT NULL, COMMIT_SCN NUMBER(10) NOT NULL, INTCOL# NUMBER(10) NOT NULL, POS# NUMBER(10) NOT NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(4000) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, OBJ#, COMMIT_SCN, INTCOL#))');
        $this->addSql('CREATE TABLE LOGMNRC_SHARD_TS (LOGMNR_UID NUMBER(10) NOT NULL, TABLESPACE_NAME VARCHAR2(90) NOT NULL, CHUNK_NUMBER NUMBER(10) NOT NULL, START_SCN NUMBER(10) NOT NULL, DROP_SCN NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(4000) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, TABLESPACE_NAME, START_SCN))');
        $this->addSql('CREATE INDEX logmnrc_i1shard_ts ON LOGMNRC_SHARD_TS (LOGMNR_UID, DROP_SCN)');
        $this->addSql('CREATE TABLE LOGMNRC_TSPART (LOGMNR_UID NUMBER(10) NOT NULL, OBJ# NUMBER(10) NOT NULL, TS# NUMBER(10) NOT NULL, START_SCN NUMBER(10) NOT NULL, DROP_SCN NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(4000) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, OBJ#, START_SCN))');
        $this->addSql('CREATE INDEX logmnrc_i1tspart ON LOGMNRC_TSPART (LOGMNR_UID, DROP_SCN)');
        $this->addSql('CREATE TABLE LOGMNRC_TS (LOGMNR_UID NUMBER(10) NOT NULL, TS# NUMBER(10) NOT NULL, NAME VARCHAR2(90) DEFAULT NULL NULL, START_SCN NUMBER(10) NOT NULL, DROP_SCN NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(4000) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, TS#, START_SCN))');
        $this->addSql('CREATE INDEX logmnrc_i1ts ON LOGMNRC_TS (LOGMNR_UID, DROP_SCN)');
        $this->addSql('CREATE TABLE LOGMNRC_GSII (LOGMNR_UID NUMBER(10) NOT NULL, OBJ# NUMBER(10) NOT NULL, BO# NUMBER(10) NOT NULL, INDTYPE# NUMBER(10) NOT NULL, DROP_SCN NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE1 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE2 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE3 VARCHAR2(1000) DEFAULT NULL NULL, LOGMNR_SPARE4 DATE DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, OBJ#))');
        $this->addSql('CREATE TABLE LOGMNRC_GSBA (LOGMNR_UID NUMBER(10) NOT NULL, AS_OF_SCN NUMBER(10) NOT NULL, FDO_LENGTH NUMBER(10) DEFAULT NULL NULL, FDO_VALUE RAW(255) DEFAULT NULL NULL, CHARSETID NUMBER(10) DEFAULT NULL NULL, NCHARSETID NUMBER(10) DEFAULT NULL NULL, DBTIMEZONE_LEN NUMBER(10) DEFAULT NULL NULL, DBTIMEZONE_VALUE VARCHAR2(192) DEFAULT NULL NULL, LOGMNR_SPARE1 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE2 NUMBER(10) DEFAULT NULL NULL, LOGMNR_SPARE3 VARCHAR2(1000) DEFAULT NULL NULL, LOGMNR_SPARE4 DATE DEFAULT NULL NULL, DB_GLOBAL_NAME VARCHAR2(384) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, AS_OF_SCN))');
        $this->addSql('CREATE TABLE LOGMNR_SEED$ (SEED_VERSION NUMBER(10) DEFAULT NULL NULL, GATHER_VERSION NUMBER(10) DEFAULT NULL NULL, SCHEMANAME VARCHAR2(384) DEFAULT NULL NULL, OBJ# NUMBER(10) DEFAULT NULL NULL, OBJV# NUMBER(10) DEFAULT NULL NULL, TABLE_NAME VARCHAR2(384) DEFAULT NULL NULL, COL_NAME VARCHAR2(384) DEFAULT NULL NULL, COL# NUMBER(10) DEFAULT NULL NULL, INTCOL# NUMBER(10) DEFAULT NULL NULL, SEGCOL# NUMBER(10) DEFAULT NULL NULL, TYPE# NUMBER(10) DEFAULT NULL NULL, LENGTH NUMBER(10) DEFAULT NULL NULL, PRECISION# NUMBER(10) DEFAULT NULL NULL, SCALE NUMBER(10) DEFAULT NULL NULL, NULL$ NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i2seed$ ON LOGMNR_SEED$ (LOGMNR_UID, SCHEMANAME, TABLE_NAME, COL_NAME, OBJ#, INTCOL#)');
        $this->addSql('CREATE INDEX logmnr_i1seed$ ON LOGMNR_SEED$ (LOGMNR_UID, OBJ#, INTCOL#)');
        $this->addSql('CREATE TABLE LOGMNR_DICTIONARY$ (DB_NAME VARCHAR2(27) DEFAULT NULL NULL, DB_ID NUMBER(20) DEFAULT NULL NULL, DB_CREATED VARCHAR2(20) DEFAULT NULL NULL, DB_DICT_CREATED VARCHAR2(20) DEFAULT NULL NULL, DB_DICT_SCN NUMBER(10) DEFAULT NULL NULL, DB_THREAD_MAP RAW(255) DEFAULT NULL NULL, DB_TXN_SCNBAS NUMBER(10) DEFAULT NULL NULL, DB_TXN_SCNWRP NUMBER(10) DEFAULT NULL NULL, DB_RESETLOGS_CHANGE# NUMBER(10) DEFAULT NULL NULL, DB_RESETLOGS_TIME VARCHAR2(20) DEFAULT NULL NULL, DB_VERSION_TIME VARCHAR2(20) DEFAULT NULL NULL, DB_REDO_TYPE_ID VARCHAR2(8) DEFAULT NULL NULL, DB_REDO_RELEASE VARCHAR2(60) DEFAULT NULL NULL, DB_CHARACTER_SET VARCHAR2(192) DEFAULT NULL NULL, DB_VERSION VARCHAR2(240) DEFAULT NULL NULL, DB_STATUS VARCHAR2(240) DEFAULT NULL NULL, DB_GLOBAL_NAME VARCHAR2(384) DEFAULT NULL NULL, DB_DICT_MAXOBJECTS NUMBER(10) DEFAULT NULL NULL, DB_DICT_OBJECTCOUNT NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL, PDB_NAME VARCHAR2(384) DEFAULT NULL NULL, PDB_ID NUMBER(10) DEFAULT NULL NULL, PDB_UID NUMBER(10) DEFAULT NULL NULL, PDB_DBID NUMBER(10) DEFAULT NULL NULL, PDB_GUID RAW(255) DEFAULT NULL NULL, PDB_CREATE_SCN NUMBER(10) DEFAULT NULL NULL, PDB_COUNT NUMBER(10) DEFAULT NULL NULL, PDB_GLOBAL_NAME VARCHAR2(384) DEFAULT NULL NULL, FED_ROOT_CON_ID# NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1dictionary$ ON LOGMNR_DICTIONARY$ (LOGMNR_UID)');
        $this->addSql('CREATE TABLE LOGMNR_OBJ$ (OBJV# NUMBER(10) DEFAULT NULL NULL, OWNER# NUMBER(10) DEFAULT NULL NULL, NAME VARCHAR2(384) DEFAULT NULL NULL, NAMESPACE NUMBER(10) DEFAULT NULL NULL, SUBNAME VARCHAR2(384) DEFAULT NULL NULL, TYPE# NUMBER(10) DEFAULT NULL NULL, OID$ RAW(255) DEFAULT NULL NULL, REMOTEOWNER VARCHAR2(384) DEFAULT NULL NULL, LINKNAME VARCHAR2(384) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, SPARE3 NUMBER(10) DEFAULT NULL NULL, STIME DATE DEFAULT NULL NULL, OBJ# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL, START_SCNBAS NUMBER(10) DEFAULT NULL NULL, START_SCNWRP NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1obj$ ON LOGMNR_OBJ$ (LOGMNR_UID, OBJ#)');
        $this->addSql('CREATE INDEX logmnr_i2obj$ ON LOGMNR_OBJ$ (LOGMNR_UID, OID$)');
        $this->addSql('CREATE INDEX logmnr_i3obj$ ON LOGMNR_OBJ$ (LOGMNR_UID, NAME)');
        $this->addSql('CREATE TABLE LOGMNR_TAB$ (TS# NUMBER(10) DEFAULT NULL NULL, COLS NUMBER(10) DEFAULT NULL NULL, PROPERTY NUMBER(10) DEFAULT NULL NULL, INTCOLS NUMBER(10) DEFAULT NULL NULL, KERNELCOLS NUMBER(10) DEFAULT NULL NULL, BOBJ# NUMBER(10) DEFAULT NULL NULL, TRIGFLAG NUMBER(10) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, OBJ# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL, ACDRFLAGS NUMBER(10) DEFAULT NULL NULL, ACDRTSOBJ# NUMBER(10) DEFAULT NULL NULL, ACDRROWTSINTCOL# NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i2tab$ ON LOGMNR_TAB$ (LOGMNR_UID, BOBJ#)');
        $this->addSql('CREATE INDEX logmnr_i1tab$ ON LOGMNR_TAB$ (LOGMNR_UID, OBJ#)');
        $this->addSql('CREATE TABLE LOGMNR_COL$ (COL# NUMBER(10) DEFAULT NULL NULL, SEGCOL# NUMBER(10) DEFAULT NULL NULL, NAME VARCHAR2(384) DEFAULT NULL NULL, TYPE# NUMBER(10) DEFAULT NULL NULL, LENGTH NUMBER(10) DEFAULT NULL NULL, PRECISION# NUMBER(10) DEFAULT NULL NULL, SCALE NUMBER(10) DEFAULT NULL NULL, NULL$ NUMBER(10) DEFAULT NULL NULL, INTCOL# NUMBER(10) DEFAULT NULL NULL, PROPERTY NUMBER(10) DEFAULT NULL NULL, CHARSETID NUMBER(10) DEFAULT NULL NULL, CHARSETFORM NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, OBJ# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL, COLLID NUMBER(10) DEFAULT NULL NULL, COLLINTCOL# NUMBER(10) DEFAULT NULL NULL, ACDRRESCOL# NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i2col$ ON LOGMNR_COL$ (LOGMNR_UID, OBJ#, NAME)');
        $this->addSql('CREATE INDEX logmnr_i1col$ ON LOGMNR_COL$ (LOGMNR_UID, OBJ#, INTCOL#)');
        $this->addSql('CREATE INDEX logmnr_i3col$ ON LOGMNR_COL$ (LOGMNR_UID, OBJ#, COL#)');
        $this->addSql('CREATE TABLE LOGMNR_ATTRCOL$ (INTCOL# NUMBER(10) DEFAULT NULL NULL, NAME VARCHAR2(4000) DEFAULT NULL NULL, OBJ# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1attrcol$ ON LOGMNR_ATTRCOL$ (LOGMNR_UID, OBJ#, INTCOL#)');
        $this->addSql('CREATE TABLE LOGMNR_TS$ (TS# NUMBER(10) DEFAULT NULL NULL, NAME VARCHAR2(90) DEFAULT NULL NULL, OWNER# NUMBER(10) DEFAULT NULL NULL, BLOCKSIZE NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL, START_SCNBAS NUMBER(10) DEFAULT NULL NULL, START_SCNWRP NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1ts$ ON LOGMNR_TS$ (LOGMNR_UID, TS#)');
        $this->addSql('CREATE TABLE LOGMNR_IND$ (BO# NUMBER(10) DEFAULT NULL NULL, COLS NUMBER(10) DEFAULT NULL NULL, TYPE# NUMBER(10) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, PROPERTY NUMBER(10) DEFAULT NULL NULL, OBJ# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i2ind$ ON LOGMNR_IND$ (LOGMNR_UID, BO#)');
        $this->addSql('CREATE INDEX logmnr_i1ind$ ON LOGMNR_IND$ (LOGMNR_UID, OBJ#)');
        $this->addSql('CREATE TABLE LOGMNR_USER$ (USER# NUMBER(10) DEFAULT NULL NULL, NAME VARCHAR2(384) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i2user$ ON LOGMNR_USER$ (LOGMNR_UID, NAME)');
        $this->addSql('CREATE INDEX logmnr_i1user$ ON LOGMNR_USER$ (LOGMNR_UID, USER#)');
        $this->addSql('CREATE TABLE LOGMNR_TABPART$ (OBJ# NUMBER(10) DEFAULT NULL NULL, TS# NUMBER(10) DEFAULT NULL NULL, PART# NUMBER(10) DEFAULT NULL NULL, BO# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1tabpart$ ON LOGMNR_TABPART$ (LOGMNR_UID, OBJ#, BO#)');
        $this->addSql('CREATE INDEX logmnr_i2tabpart$ ON LOGMNR_TABPART$ (LOGMNR_UID, BO#)');
        $this->addSql('CREATE TABLE LOGMNR_TABSUBPART$ (OBJ# NUMBER(10) DEFAULT NULL NULL, DATAOBJ# NUMBER(10) DEFAULT NULL NULL, POBJ# NUMBER(10) DEFAULT NULL NULL, SUBPART# NUMBER(10) DEFAULT NULL NULL, TS# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1tabsubpart$ ON LOGMNR_TABSUBPART$ (LOGMNR_UID, OBJ#, POBJ#)');
        $this->addSql('CREATE INDEX logmnr_i2tabsubpart$ ON LOGMNR_TABSUBPART$ (LOGMNR_UID, POBJ#)');
        $this->addSql('CREATE TABLE LOGMNR_TABCOMPART$ (OBJ# NUMBER(10) DEFAULT NULL NULL, BO# NUMBER(10) DEFAULT NULL NULL, PART# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i2tabcompart$ ON LOGMNR_TABCOMPART$ (LOGMNR_UID, BO#)');
        $this->addSql('CREATE INDEX logmnr_i1tabcompart$ ON LOGMNR_TABCOMPART$ (LOGMNR_UID, OBJ#)');
        $this->addSql('CREATE TABLE LOGMNR_TYPE$ (VERSION# NUMBER(10) DEFAULT NULL NULL, VERSION VARCHAR2(384) DEFAULT NULL NULL, TVOID RAW(255) DEFAULT NULL NULL, TYPECODE NUMBER(10) DEFAULT NULL NULL, PROPERTIES NUMBER(10) DEFAULT NULL NULL, ATTRIBUTES NUMBER(10) DEFAULT NULL NULL, METHODS NUMBER(10) DEFAULT NULL NULL, HIDDENMETHODS NUMBER(10) DEFAULT NULL NULL, SUPERTYPES NUMBER(10) DEFAULT NULL NULL, SUBTYPES NUMBER(10) DEFAULT NULL NULL, EXTERNTYPE NUMBER(10) DEFAULT NULL NULL, EXTERNNAME VARCHAR2(4000) DEFAULT NULL NULL, HELPERCLASSNAME VARCHAR2(4000) DEFAULT NULL NULL, LOCAL_ATTRS NUMBER(10) DEFAULT NULL NULL, LOCAL_METHODS NUMBER(10) DEFAULT NULL NULL, TYPEID RAW(255) DEFAULT NULL NULL, ROOTTOID RAW(255) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 NUMBER(10) DEFAULT NULL NULL, SUPERTOID RAW(255) DEFAULT NULL NULL, HASHCODE RAW(255) DEFAULT NULL NULL, TOID RAW(255) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1type$ ON LOGMNR_TYPE$ (LOGMNR_UID, TOID, VERSION#)');
        $this->addSql('CREATE TABLE LOGMNR_COLTYPE$ (COL# NUMBER(10) DEFAULT NULL NULL, INTCOL# NUMBER(10) DEFAULT NULL NULL, TOID RAW(255) DEFAULT NULL NULL, VERSION# NUMBER(10) DEFAULT NULL NULL, PACKED NUMBER(10) DEFAULT NULL NULL, INTCOLS NUMBER(10) DEFAULT NULL NULL, INTCOL#S RAW(255) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, TYPIDCOL# NUMBER(10) DEFAULT NULL NULL, SYNOBJ# NUMBER(10) DEFAULT NULL NULL, OBJ# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1coltype$ ON LOGMNR_COLTYPE$ (LOGMNR_UID, OBJ#, INTCOL#)');
        $this->addSql('CREATE TABLE LOGMNR_ATTRIBUTE$ (VERSION# NUMBER(10) DEFAULT NULL NULL, NAME VARCHAR2(384) DEFAULT NULL NULL, ATTRIBUTE# NUMBER(10) DEFAULT NULL NULL, ATTR_TOID RAW(255) DEFAULT NULL NULL, ATTR_VERSION# NUMBER(10) DEFAULT NULL NULL, SYNOBJ# NUMBER(10) DEFAULT NULL NULL, PROPERTIES NUMBER(10) DEFAULT NULL NULL, CHARSETID NUMBER(10) DEFAULT NULL NULL, CHARSETFORM NUMBER(10) DEFAULT NULL NULL, LENGTH NUMBER(10) DEFAULT NULL NULL, PRECISION# NUMBER(10) DEFAULT NULL NULL, SCALE NUMBER(10) DEFAULT NULL NULL, EXTERNNAME VARCHAR2(4000) DEFAULT NULL NULL, XFLAGS NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 NUMBER(10) DEFAULT NULL NULL, SPARE4 NUMBER(10) DEFAULT NULL NULL, SPARE5 NUMBER(10) DEFAULT NULL NULL, SETTER NUMBER(10) DEFAULT NULL NULL, GETTER NUMBER(10) DEFAULT NULL NULL, TOID RAW(255) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1attribute$ ON LOGMNR_ATTRIBUTE$ (LOGMNR_UID, TOID, VERSION#, ATTRIBUTE#)');
        $this->addSql('CREATE TABLE LOGMNR_LOB$ (OBJ# NUMBER(10) DEFAULT NULL NULL, INTCOL# NUMBER(10) DEFAULT NULL NULL, COL# NUMBER(10) DEFAULT NULL NULL, LOBJ# NUMBER(10) DEFAULT NULL NULL, CHUNK NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1lob$ ON LOGMNR_LOB$ (LOGMNR_UID, OBJ#, INTCOL#)');
        $this->addSql('CREATE TABLE LOGMNR_CON$ (OWNER# NUMBER(10) NOT NULL, NAME VARCHAR2(384) NOT NULL, CON# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL, START_SCNBAS NUMBER(10) DEFAULT NULL NULL, START_SCNWRP NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1con$ ON LOGMNR_CON$ (LOGMNR_UID, CON#)');
        $this->addSql('CREATE TABLE LOGMNR_CONTAINER$ (OBJ# NUMBER(10) NOT NULL, CON_ID# NUMBER(10) NOT NULL, DBID NUMBER(10) NOT NULL, CON_UID NUMBER(10) NOT NULL, CREATE_SCNWRP NUMBER(10) NOT NULL, CREATE_SCNBAS NUMBER(10) NOT NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, STATUS NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL, VSN NUMBER(10) DEFAULT NULL NULL, FED_ROOT_CON_ID# NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1container$ ON LOGMNR_CONTAINER$ (LOGMNR_UID, CON_ID#)');
        $this->addSql('CREATE TABLE LOGMNR_CDEF$ (CON# NUMBER(10) DEFAULT NULL NULL, COLS NUMBER(10) DEFAULT NULL NULL, TYPE# NUMBER(10) DEFAULT NULL NULL, ROBJ# NUMBER(10) DEFAULT NULL NULL, RCON# NUMBER(10) DEFAULT NULL NULL, ENABLED NUMBER(10) DEFAULT NULL NULL, DEFER NUMBER(10) DEFAULT NULL NULL, OBJ# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1cdef$ ON LOGMNR_CDEF$ (LOGMNR_UID, CON#)');
        $this->addSql('CREATE INDEX logmnr_i2cdef$ ON LOGMNR_CDEF$ (LOGMNR_UID, ROBJ#)');
        $this->addSql('CREATE INDEX logmnr_i3cdef$ ON LOGMNR_CDEF$ (LOGMNR_UID, OBJ#)');
        $this->addSql('CREATE TABLE LOGMNR_CCOL$ (CON# NUMBER(10) DEFAULT NULL NULL, OBJ# NUMBER(10) DEFAULT NULL NULL, COL# NUMBER(10) DEFAULT NULL NULL, POS# NUMBER(10) DEFAULT NULL NULL, INTCOL# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1ccol$ ON LOGMNR_CCOL$ (LOGMNR_UID, CON#, INTCOL#)');
        $this->addSql('CREATE TABLE LOGMNR_ICOL$ (OBJ# NUMBER(10) DEFAULT NULL NULL, BO# NUMBER(10) DEFAULT NULL NULL, COL# NUMBER(10) DEFAULT NULL NULL, POS# NUMBER(10) DEFAULT NULL NULL, SEGCOL# NUMBER(10) DEFAULT NULL NULL, INTCOL# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1icol$ ON LOGMNR_ICOL$ (LOGMNR_UID, OBJ#, INTCOL#)');
        $this->addSql('CREATE TABLE LOGMNR_LOBFRAG$ (FRAGOBJ# NUMBER(10) DEFAULT NULL NULL, PARENTOBJ# NUMBER(10) DEFAULT NULL NULL, TABFRAGOBJ# NUMBER(10) DEFAULT NULL NULL, INDFRAGOBJ# NUMBER(10) DEFAULT NULL NULL, FRAG# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1lobfrag$ ON LOGMNR_LOBFRAG$ (LOGMNR_UID, FRAGOBJ#)');
        $this->addSql('CREATE TABLE LOGMNR_INDPART$ (OBJ# NUMBER(10) DEFAULT NULL NULL, BO# NUMBER(10) DEFAULT NULL NULL, PART# NUMBER(10) DEFAULT NULL NULL, TS# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1indpart$ ON LOGMNR_INDPART$ (LOGMNR_UID, OBJ#, BO#)');
        $this->addSql('CREATE INDEX logmnr_i2indpart$ ON LOGMNR_INDPART$ (LOGMNR_UID, BO#)');
        $this->addSql('CREATE TABLE LOGMNR_INDSUBPART$ (OBJ# NUMBER(10) DEFAULT NULL NULL, DATAOBJ# NUMBER(10) DEFAULT NULL NULL, POBJ# NUMBER(10) DEFAULT NULL NULL, SUBPART# NUMBER(10) DEFAULT NULL NULL, TS# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1indsubpart$ ON LOGMNR_INDSUBPART$ (LOGMNR_UID, OBJ#, POBJ#)');
        $this->addSql('CREATE TABLE LOGMNR_INDCOMPART$ (OBJ# NUMBER(10) DEFAULT NULL NULL, DATAOBJ# NUMBER(10) DEFAULT NULL NULL, BO# NUMBER(10) DEFAULT NULL NULL, PART# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1indcompart$ ON LOGMNR_INDCOMPART$ (LOGMNR_UID, OBJ#)');
        $this->addSql('CREATE TABLE LOGMNR_LOGMNR_BUILDLOG (BUILD_DATE VARCHAR2(20) DEFAULT NULL NULL, DB_TXN_SCNBAS NUMBER(10) DEFAULT NULL NULL, DB_TXN_SCNWRP NUMBER(10) DEFAULT NULL NULL, CURRENT_BUILD_STATE NUMBER(10) DEFAULT NULL NULL, COMPLETION_STATUS NUMBER(10) DEFAULT NULL NULL, MARKED_LOG_FILE_LOW_SCN NUMBER(10) DEFAULT NULL NULL, INITIAL_XID VARCHAR2(22) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL, CDB_XID VARCHAR2(22) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 VARCHAR2(4000) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1logmnr_buildlog ON LOGMNR_LOGMNR_BUILDLOG (LOGMNR_UID, INITIAL_XID)');
        $this->addSql('CREATE TABLE LOGMNR_NTAB$ (COL# NUMBER(10) DEFAULT NULL NULL, INTCOL# NUMBER(10) DEFAULT NULL NULL, NTAB# NUMBER(10) DEFAULT NULL NULL, NAME VARCHAR2(4000) DEFAULT NULL NULL, OBJ# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1ntab$ ON LOGMNR_NTAB$ (LOGMNR_UID, OBJ#, INTCOL#)');
        $this->addSql('CREATE INDEX logmnr_i2ntab$ ON LOGMNR_NTAB$ (LOGMNR_UID, NTAB#)');
        $this->addSql('CREATE TABLE LOGMNR_OPQTYPE$ (INTCOL# NUMBER(10) NOT NULL, TYPE NUMBER(10) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, LOBCOL NUMBER(10) DEFAULT NULL NULL, OBJCOL NUMBER(10) DEFAULT NULL NULL, EXTRACOL NUMBER(10) DEFAULT NULL NULL, SCHEMAOID RAW(255) DEFAULT NULL NULL, ELEMNUM NUMBER(10) DEFAULT NULL NULL, SCHEMAURL VARCHAR2(4000) DEFAULT NULL NULL, OBJ# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1opqtype$ ON LOGMNR_OPQTYPE$ (LOGMNR_UID, OBJ#, INTCOL#)');
        $this->addSql('CREATE TABLE LOGMNR_SUBCOLTYPE$ (INTCOL# NUMBER(10) NOT NULL, TOID RAW(255) NOT NULL, VERSION# NUMBER(10) NOT NULL, INTCOLS NUMBER(10) DEFAULT NULL NULL, INTCOL#S RAW(255) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, SYNOBJ# NUMBER(10) DEFAULT NULL NULL, OBJ# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1subcoltype$ ON LOGMNR_SUBCOLTYPE$ (LOGMNR_UID, OBJ#, INTCOL#, TOID)');
        $this->addSql('CREATE TABLE LOGMNR_KOPM$ (LENGTH NUMBER(10) DEFAULT NULL NULL, METADATA RAW(255) DEFAULT NULL NULL, NAME VARCHAR2(384) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1kopm$ ON LOGMNR_KOPM$ (LOGMNR_UID, NAME)');
        $this->addSql('CREATE TABLE LOGMNR_PROPS$ (VALUE$ VARCHAR2(4000) DEFAULT NULL NULL, COMMENT$ VARCHAR2(4000) DEFAULT NULL NULL, NAME VARCHAR2(384) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1props$ ON LOGMNR_PROPS$ (LOGMNR_UID, NAME)');
        $this->addSql('CREATE TABLE LOGMNR_ENC$ (OBJ# NUMBER(10) DEFAULT NULL NULL, OWNER# NUMBER(10) DEFAULT NULL NULL, ENCALG NUMBER(10) DEFAULT NULL NULL, INTALG NUMBER(10) DEFAULT NULL NULL, COLKLC RAW(255) DEFAULT NULL NULL, KLCLEN NUMBER(10) DEFAULT NULL NULL, FLAG NUMBER(10) DEFAULT NULL NULL, MKEYID VARCHAR2(192) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1enc$ ON LOGMNR_ENC$ (LOGMNR_UID, OBJ#, OWNER#)');
        $this->addSql('CREATE TABLE LOGMNR_REFCON$ (COL# NUMBER(10) DEFAULT NULL NULL, INTCOL# NUMBER(10) DEFAULT NULL NULL, REFTYP NUMBER(10) DEFAULT NULL NULL, STABID RAW(255) DEFAULT NULL NULL, EXPCTOID RAW(255) DEFAULT NULL NULL, OBJ# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1refcon$ ON LOGMNR_REFCON$ (LOGMNR_UID, OBJ#, INTCOL#)');
        $this->addSql('CREATE TABLE LOGMNR_IDNSEQ$ (OBJ# NUMBER(10) NOT NULL, INTCOL# NUMBER(10) NOT NULL, SEQOBJ# NUMBER(10) NOT NULL, STARTWITH NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1idnseq$ ON LOGMNR_IDNSEQ$ (LOGMNR_UID, OBJ#, INTCOL#)');
        $this->addSql('CREATE INDEX logmnr_i2idnseq$ ON LOGMNR_IDNSEQ$ (LOGMNR_UID, SEQOBJ#)');
        $this->addSql('CREATE TABLE LOGMNR_PARTOBJ$ (PARTTYPE NUMBER(10) DEFAULT NULL NULL, PARTCNT NUMBER(10) DEFAULT NULL NULL, PARTKEYCOLS NUMBER(10) DEFAULT NULL NULL, FLAGS NUMBER(10) DEFAULT NULL NULL, DEFTS# NUMBER(10) DEFAULT NULL NULL, DEFPCTFREE NUMBER(10) DEFAULT NULL NULL, DEFPCTUSED NUMBER(10) DEFAULT NULL NULL, DEFPCTTHRES NUMBER(10) DEFAULT NULL NULL, DEFINITRANS NUMBER(10) DEFAULT NULL NULL, DEFMAXTRANS NUMBER(10) DEFAULT NULL NULL, DEFTINIEXTS NUMBER(10) DEFAULT NULL NULL, DEFEXTSIZE NUMBER(10) DEFAULT NULL NULL, DEFMINEXTS NUMBER(10) DEFAULT NULL NULL, DEFMAXEXTS NUMBER(10) DEFAULT NULL NULL, DEFEXTPCT NUMBER(10) DEFAULT NULL NULL, DEFLISTS NUMBER(10) DEFAULT NULL NULL, DEFGROUPS NUMBER(10) DEFAULT NULL NULL, DEFLOGGING NUMBER(10) DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 NUMBER(10) DEFAULT NULL NULL, DEFINCLCOL NUMBER(10) DEFAULT NULL NULL, PARAMETERS VARCHAR2(3000) DEFAULT NULL NULL, OBJ# NUMBER(10) NOT NULL, LOGMNR_UID NUMBER(10) DEFAULT NULL NULL, LOGMNR_FLAGS NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1partobj$ ON LOGMNR_PARTOBJ$ (LOGMNR_UID, OBJ#)');
        $this->addSql('CREATE TABLE LOGMNRP_CTAS_PART_MAP (LOGMNR_UID NUMBER(10) NOT NULL, BASEOBJ# NUMBER(10) NOT NULL, BASEOBJV# NUMBER(10) NOT NULL, KEYOBJ# NUMBER(10) NOT NULL, PART# NUMBER(10) NOT NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(1000) DEFAULT NULL NULL, PRIMARY KEY(LOGMNR_UID, BASEOBJV#, KEYOBJ#))');
        $this->addSql('CREATE INDEX logmnrp_ctas_part_map_i ON LOGMNRP_CTAS_PART_MAP (LOGMNR_UID, BASEOBJ#, BASEOBJV#, PART#)');
        $this->addSql('CREATE TABLE LOGMNR_SHARD_TS (LOGMNR_UID NUMBER(10) NOT NULL, TABLESPACE_NAME VARCHAR2(90) NOT NULL, CHUNK_NUMBER NUMBER(10) NOT NULL, START_SCNBAS NUMBER(10) DEFAULT NULL NULL, START_SCNWRP NUMBER(10) DEFAULT NULL NULL)');
        $this->addSql('CREATE INDEX logmnr_i1shard_ts ON LOGMNR_SHARD_TS (LOGMNR_UID, TABLESPACE_NAME)');
        $this->addSql('CREATE TABLE LOGSTDBY$APPLY_PROGRESS (XIDUSN NUMBER(10) DEFAULT NULL NULL, XIDSLT NUMBER(10) DEFAULT NULL NULL, XIDSQN NUMBER(10) DEFAULT NULL NULL, COMMIT_SCN NUMBER(10) DEFAULT NULL NULL, COMMIT_TIME DATE DEFAULT NULL NULL, SPARE1 NUMBER(10) DEFAULT NULL NULL, SPARE2 NUMBER(10) DEFAULT NULL NULL, SPARE3 VARCHAR2(2000) DEFAULT NULL NULL)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_BASETABLE ADD CONSTRAINT MVIEW$_ADV_BASETABLE_FK FOREIGN KEY (QUERYID#) REFERENCES MVIEW$_ADV_WORKLOAD (QUERYID#)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_FILTERINSTANCE ADD CONSTRAINT MVIEW$_ADV_FILTERINSTANCE_FK FOREIGN KEY (RUNID#) REFERENCES MVIEW$_ADV_LOG (RUNID#)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_LEVEL ADD CONSTRAINT MVIEW$_ADV_LEVEL_FK FOREIGN KEY (RUNID#) REFERENCES MVIEW$_ADV_LOG (RUNID#)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_ROLLUP ADD CONSTRAINT MVIEW$_ADV_ROLLUP_CFK FOREIGN KEY (RUNID#, CLEVELID#) REFERENCES MVIEW$_ADV_LEVEL (RUNID#, LEVELID#)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_ROLLUP ADD CONSTRAINT MVIEW$_ADV_ROLLUP_FK FOREIGN KEY (RUNID#) REFERENCES MVIEW$_ADV_LOG (RUNID#)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_ROLLUP ADD CONSTRAINT MVIEW$_ADV_ROLLUP_PFK FOREIGN KEY (RUNID#, PLEVELID#) REFERENCES MVIEW$_ADV_LEVEL (RUNID#, LEVELID#)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_AJG ADD CONSTRAINT MVIEW$_ADV_AJG_FK FOREIGN KEY (RUNID#) REFERENCES MVIEW$_ADV_LOG (RUNID#)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_FJG ADD CONSTRAINT MVIEW$_ADV_FJG_FK FOREIGN KEY (AJGID#) REFERENCES MVIEW$_ADV_AJG (AJGID#)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_GC ADD CONSTRAINT MVIEW$_ADV_GC_FK FOREIGN KEY (FJGID#) REFERENCES MVIEW$_ADV_FJG (FJGID#)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_CLIQUE ADD CONSTRAINT MVIEW$_ADV_CLIQUE_FK FOREIGN KEY (RUNID#) REFERENCES MVIEW$_ADV_LOG (RUNID#)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_ELIGIBLE ADD CONSTRAINT MVIEW$_ADV_ELIGIBLE_FK FOREIGN KEY (RUNID#) REFERENCES MVIEW$_ADV_LOG (RUNID#)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_OUTPUT ADD CONSTRAINT MVIEW$_ADV_OUTPUT_FK FOREIGN KEY (RUNID#) REFERENCES MVIEW$_ADV_LOG (RUNID#)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_EXCEPTIONS ADD CONSTRAINT MVIEW$_ADV_EXCEPTION_FK FOREIGN KEY (RUNID#) REFERENCES MVIEW$_ADV_LOG (RUNID#)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_INFO ADD CONSTRAINT MVIEW$_ADV_INFO_FK FOREIGN KEY (RUNID#) REFERENCES MVIEW$_ADV_LOG (RUNID#)');
        $this->addSql('ALTER TABLE MVIEW$_ADV_JOURNAL ADD CONSTRAINT MVIEW$_ADV_JOURNAL_FK FOREIGN KEY (RUNID#) REFERENCES MVIEW$_ADV_LOG (RUNID#)');
        $this->addSql('ALTER TABLE AQ$_INTERNET_AGENT_PRIVS ADD CONSTRAINT AGENT_MUST_BE_CREATED FOREIGN KEY (AGENT_NAME) REFERENCES AQ$_INTERNET_AGENTS (AGENT_NAME) ON DELETE CASCADE');
        $this->addSql('DROP TABLE files');
        $this->addSql('DROP TABLE messages_files');
        $this->addSql('DROP TABLE notifications');
        $this->addSql('DROP TABLE tasks_files');
        $this->addSql('ALTER TABLE messages MODIFY (ID NUMBER(10) DEFAULT NULL)');
        $this->addSql('ALTER TABLE tasks MODIFY (ID NUMBER(10) DEFAULT NULL, CONTENT CLOB DEFAULT NULL)');
    }
}
